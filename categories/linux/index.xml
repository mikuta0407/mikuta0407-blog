<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on 平和に生きたい</title><link>https://blog.mikuta0407.net/categories/linux/</link><description>Recent content in Linux on 平和に生きたい</description><generator>Hugo -- gohugo.io</generator><language>ja</language><copyright>mikuta0407</copyright><lastBuildDate>Fri, 16 Dec 2022 00:00:00 +0900</lastBuildDate><atom:link href="https://blog.mikuta0407.net/categories/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>GoでMisskeyのCLIクライアントを作った話 (Misskey Advent Calender 2022)</title><link>https://blog.mikuta0407.net/posts/2022/20221216-misskey-cli/</link><pubDate>Fri, 16 Dec 2022 00:00:00 +0900</pubDate><guid>https://blog.mikuta0407.net/posts/2022/20221216-misskey-cli/</guid><description>&lt;img src="https://blog.mikuta0407.net/posts/2022/20221216-misskey-cli/img/misskey-cli-scr.png" alt="Featured image of post GoでMisskeyのCLIクライアントを作った話 (Misskey Advent Calender 2022)" />&lt;p>この記事は&lt;a class="link" href="https://adventar.org/calendars/7354" target="_blank" rel="noopener"
>Misskey Advent Calendar 2022&lt;/a> 16日目の記事です。&lt;/p>
&lt;p>こんにちは。たっくん(@mikuta0407)です。&lt;/p>
&lt;p>GoでMisskeyのCLIクライアントを作ったので、宣伝も兼ねてアドカレに参加してみようと思います。よろしくお願いします。&lt;/p>
&lt;hr>
&lt;p>早速ですが、こんな感じのCLIなMisskeyクライアントを作りました。&lt;/p>
&lt;p>&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2022/20221216-misskey-cli/img/194720200-8dbf0394-9d4b-4e84-ad91-739eb0fec1c4_hu951e91d74c3322dab0f9ffb021ed0c8b_6422243_3886x2475_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2022/20221216-misskey-cli/img/194720200-8dbf0394-9d4b-4e84-ad91-739eb0fec1c4.png"
width="3886"
height="2475"
srcset="https://blog.mikuta0407.net/posts/2022/20221216-misskey-cli/img/194720200-8dbf0394-9d4b-4e84-ad91-739eb0fec1c4_hu951e91d74c3322dab0f9ffb021ed0c8b_6422243_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2022/20221216-misskey-cli/img/194720200-8dbf0394-9d4b-4e84-ad91-739eb0fec1c4_hu951e91d74c3322dab0f9ffb021ed0c8b_6422243_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="157"
data-flex-basis="376px"
>
&lt;/picture>
&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/mikuta0407/misskey-cli" target="_blank" rel="noopener"
>&lt;picture>&lt;img src="https://gh-card.dev/repos/mikuta0407/misskey-cli.svg"
loading="lazy"
alt="mikuta0407/misskey-cli"
>
&lt;/picture>
&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/mikuta0407/misskey-cli" target="_blank" rel="noopener"
>https://github.com/mikuta0407/misskey-cli&lt;/a>&lt;/p>
&lt;p>ここで配布してます。&lt;/p>
&lt;p>もし良ければ是非。Linux(amd64/aarch32/aarch64)/macOS(M1)で動作を確認しています。&lt;/p>
&lt;p>MITライセンスではありますが、割と適当にお使いください。(使用ライブラリ的にMITライセンスが楽だなとなった感じです)&lt;/p>
&lt;p>使い方はGitHubのREADMEにあるのである程度割愛するとして、この記事では実装方法について振り返りも兼ねて紹介しようと思います。&lt;/p>
&lt;p>ちなみに、書いている最中に引用リノートの投稿/表示に対応していないことに気づきましたが、修正する時間がなかったので今後追加予定の機能ということにして……そのまま行きます。&lt;/p>
&lt;h2 id="動機">動機
&lt;/h2>&lt;p>mattnさんの&lt;code>twty&lt;/code> (&lt;a class="link" href="https://github.com/mattn/twty" target="_blank" rel="noopener"
>https://github.com/mattn/twty&lt;/a>) が作業中TwitterのカモフラージュにCLIでTwitterするのに便利だったので、Misskey版っぽいのも作りたいなぁと思い、やってみました。&lt;/p>
&lt;p>あと、ついでにGoを大真面目に学んでいるところでもあったので、アウトプットという意味でも何か形にしたかったので、「せっかくtwtyがGoなら、Goで作ってシングルバイナリかつマルチプラットフォームやるぞ」という気持ちもありました。&lt;/p>
&lt;h2 id="使ったもの">使ったもの
&lt;/h2>&lt;ul>
&lt;li>Go言語 (1.19)
&lt;ul>
&lt;li>標準以外のパッケージ
&lt;ul>
&lt;li>github.com/BurntSushi/toml&lt;/li>
&lt;li>github.com/buger/jsonparser&lt;/li>
&lt;li>github.com/spf13/cobra&lt;/li>
&lt;li>golang.org/x/crypto&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Misskey API
&lt;ul>
&lt;li>&lt;a class="link" href="https://misskey-hub.net/docs/api/" target="_blank" rel="noopener"
>https://misskey-hub.net/docs/api/&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="各実装部分">各実装部分
&lt;/h2>&lt;p>ここからは、どんな感じで実装していったのかについて、振り返っていきます。&lt;/p>
&lt;h3 id="cobra">cobra
&lt;/h3>&lt;p>サブコマンドを実装するため、cobraを採用し、&lt;code>tl``note``renote&lt;/code> の3つのサブコマンドを実装しました。&lt;/p>
&lt;p>このサブコマンドの中で更にフラグを使ってモードを分けています。実際に階層を表すと(ただのヘルプの日本語訳になりそうですが)、&lt;/p>
&lt;ul>
&lt;li>&lt;code>tl&lt;/code>: TL表示
&lt;ul>
&lt;li>&lt;code>-l&lt;/code>: 一度に表示する件数&lt;/li>
&lt;li>&lt;code>-m&lt;/code>: TLのモード(ホーム/ローカル/グローバル)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>note&lt;/code>: 投稿系
&lt;ul>
&lt;li>&lt;code>-d&lt;/code>: 投稿削除&lt;/li>
&lt;li>&lt;code>-r&lt;/code>: リプライ&lt;/li>
&lt;li>なし: 通常投稿&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>renote&lt;/code>: リノート
&lt;ul>
&lt;li>引用RTには現状対応していません。(簡単にできるんだけどコマンド体系で悩み中)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>共通フラグ
&lt;ul>
&lt;li>&lt;code>-c&lt;/code>: コンフィグファイルのパス指定(オプション)&lt;/li>
&lt;li>&lt;code>-t&lt;/code>: インスタンス切り替え指定 こんな感じになります。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>また、表示件数とTLのモードとコンフィグファイルのパスは指定されなかった場合のデフォルト値を指定している他、インスタンス切り替えに関しては(後述しますが)指定されなかった場合はコンフィグファイルの一番上のインスタンスを使うようにしています。&lt;/p>
&lt;p>cobra自体の説明はここでしてもあまり意味がないため、これくらいにさせてください。&lt;/p>
&lt;h3 id="コンフィグ周り">コンフィグ周り
&lt;/h3>&lt;p>インスタンスの接続情報を持つコンフィグファイルはtoml形式で記述します。&lt;/p>
&lt;p>(この記事を執筆している段階では、プログラム側からコンフィグファイルを生成する機能は無いので、手動で記述する必要があります。)&lt;/p>
&lt;p>例:&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[[&lt;/span>&lt;span class="nx">Instance&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">host&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">https&lt;/span>&lt;span class="err">://&lt;/span>&lt;span class="nx">misskey&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">io&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">misskey&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">io&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">token&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">hOgEFuGA&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">username&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">mikuta0407&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>tomlのパースは&lt;code>github.com/BurntSushi/toml&lt;/code>で行っています。&lt;/p>
&lt;p>インスタンスの接続情報はtoml内に複数記述できるようにしているので、構造体の宣言はインスタンス情報が入った構造体(&lt;code>InstanceInfo&lt;/code>)の配列(&lt;code>Instance&lt;/code>)、というようにしています。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">type&lt;/span> &lt;span class="nx">Config&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Instance&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="nx">InstanceInfo&lt;/span> &lt;span class="s">`toml:Instance`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">type&lt;/span> &lt;span class="nx">InstanceInfo&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Host&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="s">`toml:host validate:required`&lt;/span> &lt;span class="c1">// 接続先ホスト
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">Name&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="s">`toml:name validate:required`&lt;/span> &lt;span class="c1">// フレンドリ名(-iオプションで指定する文字列)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">Token&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="s">`toml:token validate:required`&lt;/span> &lt;span class="c1">// Misskeyのアクセストークン
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">UserName&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="s">`toml:username validate:required`&lt;/span> &lt;span class="c1">// コンソールに表示するユーザー名(本来はなくてもいいがtoml内の識別用に一応
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>そして、&lt;code>toml.DecodeFile&lt;/code>でtomlファイルの内容を構造体配列に入れています。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">ParseToml&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fileName&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">Config&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">configs&lt;/span> &lt;span class="nx">Config&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">toml&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">DecodeFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fileName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">configs&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">configs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>この後は、例えば2つめのインスタンス情報のトークンが欲しければ、&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">config.Instance[1].Token&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>のように書くことで取得できるようになります。&lt;/p>
&lt;p>ちなみに、&lt;code>-i&lt;/code>オプションでインスタンスを指定しなかった場合の挙動ですが、自動で&lt;code>[0]&lt;/code>の内容を使うようにしています。&lt;/p>
&lt;p>また、インスタンス指定があった場合は&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">index&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">isExist&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">include&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">configs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Instance&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">instanceName&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 第1引数で渡したInstanceInfo配列から第2引数のインスタンス名が含まれている添え字を返す
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">instanceInfo&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">configs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Instance&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>といったコードで、「指定されたインスタンスのフレンドリ名が含まれている添字を取得し、そこの内容を見に行く」という処理をしています。(実際は指定されたものが無かったときのエラーハンドリングもしています)&lt;/p>
&lt;p>このコンフィグファイル周りの処理は、&lt;code>misskey&lt;/code>パッケージのNewClientでクライアントインスタンス(言葉が厄介になってきた)を作成するときにtomlのパースを呼び出しつつ、インスタンス情報を確定した単一の&lt;code>InstanceInfo&lt;/code>構造体を含むCleiint構造体を返すことで行っています。&lt;/p>
&lt;p>…日本語で書くとむしろわかりにくいですね。&lt;/p>
&lt;p>興味がある方は &lt;a class="link" href="https://github.com/mikuta0407/misskey-cli/blob/67d17a15d3bff0e7c258f42a61b5d99679e2d164/misskey/misskey.go#L18-L48" target="_blank" rel="noopener"
>https://github.com/mikuta0407/misskey-cli/blob/67d17a15d3bff0e7c258f42a61b5d99679e2d164/misskey/misskey.go#L18-L48&lt;/a> を見ていただけるとわかるかと思います。&lt;/p>
&lt;h3 id="apiのpost">APIのPOST
&lt;/h3>&lt;p>&lt;a class="link" href="https://github.com/mikuta0407/misskey-cli/blob/67d17a15d3bff0e7c258f42a61b5d99679e2d164/misskey/apipost.go#L11-L36" target="_blank" rel="noopener"
>https://github.com/mikuta0407/misskey-cli/blob/67d17a15d3bff0e7c258f42a61b5d99679e2d164/misskey/apipost.go#L11-L36&lt;/a>&lt;/p>
&lt;p>このコードの話です。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Client&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">apiPost&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">jsonByte&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">endpoint&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewRequest&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">POST&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">InstanceInfo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Host&lt;/span>&lt;span class="o">+/&lt;/span>&lt;span class="nx">api&lt;/span>&lt;span class="o">/+&lt;/span>&lt;span class="nx">endpoint&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">bytes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewBuffer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">jsonByte&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">client&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Client&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">resp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">client&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Do&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">resBuf&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">bytes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Buffer&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Copy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">resBuf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">resp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Body&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">resp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">StatusCode&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="mi">200&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">resp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">StatusCode&lt;/span> &lt;span class="p">&amp;gt;&lt;/span> &lt;span class="mi">300&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">resp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">StatusCode&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">resBuf&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">defer&lt;/span> &lt;span class="nx">resp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>MisskeyのAPIはPOSTにJSONのリクエストボディをくっつけてHTTPのリクエストを送ることでレスポンスをもらえます。&lt;/p>
&lt;blockquote>
&lt;p>HTTP APIはすべてPOSTで、リクエスト/レスポンスともにJSON形式です。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a class="link" href="https://misskey-hub.net/docs/api/" target="_blank" rel="noopener"
>https://misskey-hub.net/docs/api/&lt;/a>&lt;/p>
&lt;p>misskeyパッケージの&lt;code>Client&lt;/code>の&lt;code>apiPost&lt;/code>というメソッドで、引数に渡されたJSON文字列とエンドポイント先(API名?)を使ってPOSTしています。&lt;/p>
&lt;p>この&lt;code>apiPost&lt;/code>というメソッドは、&lt;code>net/http&lt;/code>パッケージの&lt;code>http.NewRequest&lt;/code>を使ってPOSTし、ステータスコードが200であれば返却されたレスポンスボディを&lt;code>Client&lt;/code>構造体内の&lt;code>resBuf&lt;/code>(&lt;code>*bytes.Buffer&lt;/code>)に入れています。(200以外はerrorを返すので受けた側でエラーハンドリング)&lt;/p>
&lt;p>例えば新規投稿では、&lt;code>apiPost&lt;/code>メソッドにアクセストークンと投稿文字をJSONに流し込んだ&lt;code>jsonByte&lt;/code>(json文字バイト列)と、&lt;code>notes/create&lt;/code>という投稿用エンドポイントを&lt;code>c.apiPost(jsonByte, notes/create)&lt;/code>として渡すことで投稿が出来ます。渡されたエンドポイントの文字列は、最初のコンフィグファイルパースのときに&lt;code>Client&lt;/code>内&lt;code>InstanceInfo.Host&lt;/code>に入っているMisskeyのホスト先に「&lt;code>/api/&lt;/code>」と渡されたエンドポイント名を結合することでリクエスト先を生成しています。&lt;/p>
&lt;p>アクセストークンについては、リクエストボディのJSON内では&lt;code>i&lt;/code>というパラメータに渡すことで利用ができます。&lt;/p>
&lt;p>(ちなみに、現状misskey-cliはアクセストークンの取得手段を実装していないため、tomlに記載するアクセストークンはブラウザ版から手動で取得する必要があります)&lt;/p>
&lt;p>APIのドキュメントを見ると本当に色々と機能があり、眺めてみると面白いのでオススメです。&lt;/p>
&lt;h3 id="投稿リプライリノート削除">投稿・リプライ・リノート・削除
&lt;/h3>&lt;h4 id="投稿">投稿
&lt;/h4>&lt;p>&lt;a class="link" href="https://github.com/mikuta0407/misskey-cli/blob/67d17a15d3bff0e7c258f42a61b5d99679e2d164/misskey/postnotes.go#L10-L40" target="_blank" rel="noopener"
>https://github.com/mikuta0407/misskey-cli/blob/67d17a15d3bff0e7c258f42a61b5d99679e2d164/misskey/postnotes.go#L10-L40&lt;/a>この関数の話です。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Client&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">CreateNote&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">text&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">body&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">I&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="s">`json:i`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Text&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="s">`json:text`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">I&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">InstanceInfo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Token&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Text&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">text&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">jsonByte&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">json&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Marshal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">apiPost&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">jsonByte&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">notes&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">create&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">jsonparser&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">resBuf&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Bytes&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nx">createdNote&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">text&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">jsonparser&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">resBuf&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Bytes&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nx">createdNote&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">text&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">Create&lt;/span> &lt;span class="nx">Note&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="err">@&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">InstanceInfo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UserName&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">InstanceInfo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Host&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printLine&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">str&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">Note&lt;/span> &lt;span class="nx">Success&lt;/span>&lt;span class="p">!&lt;/span> &lt;span class="nx">id&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="o">%&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">text&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">str&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>Misskeyのノート投稿のAPI仕様は、&lt;/p>
&lt;p>&lt;a class="link" href="https://misskey-hub.net/docs/api/endpoints/notes/create.html" target="_blank" rel="noopener"
>https://misskey-hub.net/docs/api/endpoints/notes/create.html&lt;/a>にありますが、&lt;/p>
&lt;p>&lt;code>&amp;lt;host&amp;gt;/api/notes/create&lt;/code>宛に、トークンと投稿内容をリクエストボディに入れてPOSTすることで投稿ができます。&lt;/p>
&lt;p>curlで投稿をしてみると、&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">curl -X POST -d &amp;#39;{i:hogehugaToken, text:ねこはいます ねこでした。}&amp;#39; https://misskey.io/api/notes/create&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>を実行すれば、&lt;/p>
&lt;p>&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2022/20221216-misskey-cli/img/zPc5DtG_hufd45c83c60526d2ad294b771fd737848_96456_870x858_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2022/20221216-misskey-cli/img/zPc5DtG.png"
width="870"
height="858"
srcset="https://blog.mikuta0407.net/posts/2022/20221216-misskey-cli/img/zPc5DtG_hufd45c83c60526d2ad294b771fd737848_96456_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2022/20221216-misskey-cli/img/zPc5DtG_hufd45c83c60526d2ad294b771fd737848_96456_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="101"
data-flex-basis="243px"
>
&lt;/picture>
&lt;/p>
&lt;p>このように投稿ができます。(投稿したらすぐにスタンプが付いた。これぞMisskey)&lt;/p>
&lt;p>この新規投稿に関しては、Client構造体のメソッド&lt;code>CreateNote&lt;/code>として実装しました。&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/mikuta0407/misskey-cli/blob/67d17a15d3bff0e7c258f42a61b5d99679e2d164/misskey/postnotes.go#L10-L40" target="_blank" rel="noopener"
>https://github.com/mikuta0407/misskey-cli/blob/67d17a15d3bff0e7c258f42a61b5d99679e2d164/misskey/postnotes.go#L10-L40&lt;/a>&lt;/p>
&lt;p>引数に渡されたテキストをbody用構造体にトークンとともに入れてjson.Marshalで文字バイト列&lt;code>jsonByte&lt;/code>を作成し、先述のapiPostに&lt;code>jsonByte&lt;/code>とエンドポイント先を渡すことで、投稿をしています。&lt;/p>
&lt;p>misskey-cliで投稿をすると、以下のように投稿IDと投稿内容が表示されるようになっています。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ ./misskey-cli note -i io 眠すぎる
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">misskey-cli Create Note: @mikuta0407 &lt;span class="o">(&lt;/span>https://misskey.io&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">=====================================&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Note Success! id : 98jwnbd39s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">眠すぎる&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>この部分は、POSTしたときに戻ってきたJSONから値を取り出しています。&lt;/p>
&lt;p>戻ってくるJSONは以下のようになっています。(実装上はClient構造体内&lt;code>resBuf&lt;/code>に入っています)&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">createdNote:&lt;/span> &lt;span class="err">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">id:&lt;/span> &lt;span class="err">98jwi9p10i,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">createdAt:&lt;/span> &lt;span class="err">2022-12-09T09:59:52.981Z,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">userId:&lt;/span> &lt;span class="err">8rhxi7gw77,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">user:&lt;/span> &lt;span class="err">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">id:&lt;/span> &lt;span class="err">8rhxi7gw77,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">name:&lt;/span> &lt;span class="err">null,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">username:&lt;/span> &lt;span class="err">mikuta0407,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">host:&lt;/span> &lt;span class="err">null,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">avatarUrl:&lt;/span> &lt;span class="err">https:&lt;/span>&lt;span class="c1">//s3.arkjp.net/misskey/thumbnail-b13bb7e7-c86b-47f4-bed7-aee75c5febf6.webp,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="err">avatarBlurhash:&lt;/span> &lt;span class="err">yILWR+-U7fS$xGX9s900WB9cR-xskCWBAwR*&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">TsmWBnPOE~CRk-pxaIVaes.Ads:xZjbNaS#r@%gkCNFWBWXi&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="err">tQ=yjZI;R*xGt6WC,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">avatarColor:&lt;/span> &lt;span class="err">null,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">emojis:&lt;/span> &lt;span class="err">[],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">onlineStatus:&lt;/span> &lt;span class="err">active,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">driveCapacityOverrideMb:&lt;/span> &lt;span class="err">null&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;span class="err">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">text:&lt;/span> &lt;span class="err">ねこはいます&lt;/span> &lt;span class="err">ねこでした,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">cw:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="err">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">visibility:&lt;/span> &lt;span class="err">public,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">renoteCount:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="err">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">repliesCount:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="err">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">reactions:&lt;/span> &lt;span class="p">{}&lt;/span>&lt;span class="err">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">emojis:&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="err">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">fileIds:&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="err">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">files:&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="err">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">replyId:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="err">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">renoteId:&lt;/span> &lt;span class="kc">null&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>この中で表示したい部分は&lt;code>createNote&lt;/code>の中の&lt;code>id&lt;/code>と、&lt;code>createNote&lt;/code>の中の&lt;code>text&lt;/code>の2つです。&lt;/p>
&lt;p>Go言語で普通JSONのパースを行うときは、JSONの中身に対応した構造体を宣言してそこにパースしていきますが、Misskeyの返却APIはパラメータが多く、かつ場合によっては中身の構造が増える(特に投稿ではなくRenote/Replyで発生する)ため、PHPの&lt;code>json.decode&lt;/code>のように動的にパースできないGo言語では実装が大変です。&lt;/p>
&lt;p>そこで、JSONのバイト列からその場で欲しい値をキー名ベースで持ってきてくれる&lt;code>github.com/buger/jsonparser&lt;/code>を使って値を取得することにしました。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">jsonparser&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">resBuf&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Bytes&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nx">createdNote&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">text&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">jsonparser&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">resBuf&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Bytes&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nx">createdNote&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">text&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>これであれば構造体をわざわざ宣言する必要がないので、JSONの構造が変わったとしても対応が可能となります。&lt;/p>
&lt;p>あとは&lt;code>id&lt;/code>と&lt;code>text&lt;/code>を&lt;code>fmt.Sprintf&lt;/code>等で表示すればよいので、このライブラリには大変助けれられました。&lt;/p>
&lt;h4 id="リプライ">リプライ
&lt;/h4>&lt;p>&lt;a class="link" href="https://github.com/mikuta0407/misskey-cli/blob/67d17a15d3bff0e7c258f42a61b5d99679e2d164/misskey/postnotes.go#L42-L71" target="_blank" rel="noopener"
>https://github.com/mikuta0407/misskey-cli/blob/67d17a15d3bff0e7c258f42a61b5d99679e2d164/misskey/postnotes.go#L42-L71&lt;/a>&lt;/p>
&lt;p>ここの&lt;code>ReplyNote&lt;/code>関数の話です(CreateNoteと重複する部分が多いためコード貼るのは省略)&lt;/p>
&lt;p>リプライは投稿と同様に&lt;code>notes/create&lt;/code>のAPIを使用します。&lt;/p>
&lt;p>先程はリクエストボディ内はトークンと内容だけでしたが、リプライするには&lt;code>replyId&lt;/code>を追加することでリプライが出来ます。&lt;/p>
&lt;p>replyIdを追加することで、指定したノートのID(ノートのURL等で最後についている文字列。↑の投稿例だと&lt;code>98jwnbd39s&lt;/code>がノートID)にリプライをする、指示しています。&lt;/p>
&lt;p>&lt;code>-r&lt;/code>オプションでもらったreplyIdを追加して新規投稿と同様にPOSTしているだけなので、後の解説は割愛します。&lt;/p>
&lt;h4 id="リノート">リノート
&lt;/h4>&lt;p>&lt;a class="link" href="https://github.com/mikuta0407/misskey-cli/blob/67d17a15d3bff0e7c258f42a61b5d99679e2d164/misskey/postnotes.go#L73-L100" target="_blank" rel="noopener"
>https://github.com/mikuta0407/misskey-cli/blob/67d17a15d3bff0e7c258f42a61b5d99679e2d164/misskey/postnotes.go#L73-L100&lt;/a>&lt;/p>
&lt;p>ここの&lt;code>RenoteNote&lt;/code>関数の話です。コード貼るのは省略。&lt;/p>
&lt;p>リノートも投稿・リプライと同様に&lt;code>notes/create&lt;/code>のAPIを使用します。&lt;/p>
&lt;p>リプライの時の&lt;code>replyId&lt;/code>の代わりに&lt;code>renoteId&lt;/code>を付与してPOSTするだけでリノートが出来ます。&lt;/p>
&lt;p>現状misskey-cliでは実装できていませんが、引用リノートがMisskeyには存在します。&lt;/p>
&lt;p>引用リノートをする場合は、リプライとほぼ同じようにトークン・renoteId・テキストの3つをPOSTすることで引用リノートができます。&lt;/p>
&lt;p>(余談) クライアントである以上はmisskey-cliでもちゃんと追加はしたいのですが、 &lt;code>misskey-cli renote 98jwnbd39s&lt;/code>といったようにすることでリノートをするよう実装してしまったため、引用リノートをするときはどういうコマンド/オプション体系にすればいいかを悩んでしまっています。&lt;/p>
&lt;h4 id="削除">削除
&lt;/h4>&lt;p>&lt;a class="link" href="https://github.com/mikuta0407/misskey-cli/blob/67d17a15d3bff0e7c258f42a61b5d99679e2d164/misskey/postnotes.go#L102-L127" target="_blank" rel="noopener"
>https://github.com/mikuta0407/misskey-cli/blob/67d17a15d3bff0e7c258f42a61b5d99679e2d164/misskey/postnotes.go#L102-L127&lt;/a>&lt;/p>
&lt;p>ここの&lt;code>DeleteNote&lt;/code>関数の話です。&lt;/p>
&lt;p>削除はエンドポイントこそ&lt;code>api/notes/delete&lt;/code>と投稿系と異なりますが、リクエストボディ自体はほぼリノートと同様で、トークンと削除したい&lt;code>noteId&lt;/code>を指定してPOSTすることで削除が行なえます。&lt;/p>
&lt;p>(これ以上書くことがない)&lt;/p>
&lt;h3 id="tl取得">TL取得
&lt;/h3>&lt;p>TL取得が一番時間がかかった部分です。&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/mikuta0407/misskey-cli/blob/main/misskey/gettimeline.go" target="_blank" rel="noopener"
>https://github.com/mikuta0407/misskey-cli/blob/main/misskey/gettimeline.go&lt;/a>&lt;/p>
&lt;p>このコードの話です。&lt;/p>
&lt;p>タイムライン取得は、トークンと表示数をリクエストボディに入れ、エンドポイント先を指定することでローカル/グローバル/ホームのTLを指定表示件数分取得することが出来ます。&lt;/p>
&lt;p>ドキュメント:&lt;/p>
&lt;ul>
&lt;li>ローカルTL: &lt;a class="link" href="https://misskey-hub.net/docs/api/endpoints/notes/local-timeline.html" target="_blank" rel="noopener"
>https://misskey-hub.net/docs/api/endpoints/notes/local-timeline.html&lt;/a>&lt;/li>
&lt;li>グローバルTL: &lt;a class="link" href="https://misskey-hub.net/docs/api/endpoints/notes/global-timeline.html" target="_blank" rel="noopener"
>https://misskey-hub.net/docs/api/endpoints/notes/global-timeline.html&lt;/a>&lt;/li>
&lt;li>ホームTL: &lt;a class="link" href="https://misskey-hub.net/docs/api/endpoints/notes/timeline.html" target="_blank" rel="noopener"
>https://misskey-hub.net/docs/api/endpoints/notes/timeline.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>例えば、ローカルTLの取得(最新2件)をcurlでやるとすると、&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">curl -X POST -d &amp;#39;{i:hogehugaToken, limit:2}&amp;#39; https://misskey.io/api/notes/local-timeline&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>となります。&lt;/p>
&lt;p>実際にcurlで最新1件のノートを取得してみると、こんなJSONが降ってきます。(とりあえず1件)、&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">id:&lt;/span> &lt;span class="err">98iwcr1ime,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">createdAt:&lt;/span> &lt;span class="err">2022-12-08T17:07:49.350Z,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">userId:&lt;/span> &lt;span class="err">8rhxi7gw77,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">user:&lt;/span> &lt;span class="err">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">id:&lt;/span> &lt;span class="err">8rhxi7gw77,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">name:&lt;/span> &lt;span class="err">null,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">username:&lt;/span> &lt;span class="err">mikuta0407,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">host:&lt;/span> &lt;span class="err">null,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">avatarUrl:&lt;/span> &lt;span class="err">https:&lt;/span>&lt;span class="c1">//s3.arkjp.net/misskey/thumbnail-b13bb7e7-c86b-47f4-bed7-aee75c5febf6.webp,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="err">avatarBlurhash:&lt;/span> &lt;span class="err">yILWR+-U7fS$xGX9s900WB9cR-xskCWBAwR*&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">TsmWBnPOE~CRk-pxaIVaes.Ads:xZjbNaS#r@%gkCNFWBWXi&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="err">tQ=yjZI;R*xGt6WC,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">avatarColor:&lt;/span> &lt;span class="err">null,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">emojis:&lt;/span> &lt;span class="err">[],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">onlineStatus:&lt;/span> &lt;span class="err">online,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">driveCapacityOverrideMb:&lt;/span> &lt;span class="err">null&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">text:&lt;/span> &lt;span class="err">お腹空いてきちゃった・・・&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">cw:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">visibility:&lt;/span> &lt;span class="err">public&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">renoteCount:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">repliesCount:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">reactions:&lt;/span> &lt;span class="p">{},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">emojis:&lt;/span> &lt;span class="p">[],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">fileIds:&lt;/span> &lt;span class="p">[],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">files:&lt;/span> &lt;span class="p">[],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">replyId:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">renoteId:&lt;/span> &lt;span class="kc">null&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>こんな感じでjson配列がもらえます。この配列を&lt;code>jsonparser.ArrayEach&lt;/code>を使って要素ごとに処理しTL表示をしています。&lt;/p>
&lt;p>TLを構築する投稿のパターンは通常投稿・リプライ・リノートの3つがあります。執筆時点では引用リノートに非対応ですが(ごめんなさい)、これら3つのパターン分けは、&lt;/p>
&lt;ul>
&lt;li>&lt;code>renoteId&lt;/code>があるか→あればリノート&lt;/li>
&lt;li>&lt;code>replyId&lt;/code>があるか→あればリプライ投稿&lt;/li>
&lt;li>両方無かったら→通常投稿 という分岐で行うことが出来ます。&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://github.com/mikuta0407/misskey-cli/blob/67d17a15d3bff0e7c258f42a61b5d99679e2d164/misskey/gettimeline.go#L59-L96" target="_blank" rel="noopener"
>https://github.com/mikuta0407/misskey-cli/blob/67d17a15d3bff0e7c258f42a61b5d99679e2d164/misskey/gettimeline.go#L59-L96&lt;/a>&lt;/p>
&lt;h3 id="通常投稿">通常投稿
&lt;/h3>&lt;p>通常投稿の場合は、上記例のパターンのJSONが降ってきます。&lt;/p>
&lt;p>そして、コンソールへの表示は&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">2022/12/14 23:29:29 名前(@ID) 本文 (添付有り)(98abcdef)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>といったようにするため、JSONの中で必要なものは - 投稿者名(&lt;code>user.name&lt;/code>)&lt;/p>
&lt;ul>
&lt;li>投稿者ID(&lt;code>user.username&lt;/code>)(@hogeで始まるもの)&lt;/li>
&lt;li>投稿者インスタンスホスト名(&lt;code>user.host&lt;/code>)(@hoge@&lt;strong>misskey.io&lt;/strong>の部分)&lt;/li>
&lt;li>投稿時間(&lt;code>createdAt&lt;/code>)&lt;/li>
&lt;li>本文(&lt;code>text&lt;/code>)&lt;/li>
&lt;li>投稿ID(&lt;code>id&lt;/code>)&lt;/li>
&lt;li>猫フラグ(&lt;code>user.isCat&lt;/code>)&lt;/li>
&lt;li>添付ファイル情報(&lt;code>files&lt;/code>) となります。&lt;/li>
&lt;/ul>
&lt;p>これらを取り出しているのが、&lt;code>pickNote&lt;/code>関数となります。&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/mikuta0407/misskey-cli/blob/67d17a15d3bff0e7c258f42a61b5d99679e2d164/misskey/gettimeline.go#L111-L158" target="_blank" rel="noopener"
>https://github.com/mikuta0407/misskey-cli/blob/67d17a15d3bff0e7c258f42a61b5d99679e2d164/misskey/gettimeline.go#L111-L158&lt;/a>&lt;/p>
&lt;p>この関数に投稿のjson配列の1要素のバイト列を渡すし、新規投稿のところでも書いた&lt;code>jsonparser&lt;/code>を使って、json用の構造体の宣言なしに値を取り出しをしています。(&lt;code>noteData&lt;/code>という取り出した値を入れる構造体は作っています。)&lt;/p>
&lt;p>hostに記載があれば他インスタンス投稿なのでそのホスト名を表示したり、isCatのフラグがあれば名前の後に&lt;code>(Cat)&lt;/code>を付加して猫であることをわかるようにしたり、添付ファイルが1つでもあれば&lt;code>(添付あり)&lt;/code>と表示するなどしたりなど、簡易的な閲覧であれば十分と思われる情報量を表示しています。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">type&lt;/span> &lt;span class="nx">noteData&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">offset&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">timestamp&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">name&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">username&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">host&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">text&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">attach&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">id&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">isCat&lt;/span> &lt;span class="kt">bool&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">pickNote&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">value&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">noteData&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">note&lt;/span> &lt;span class="nx">noteData&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="kt">error&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 投稿者
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">note&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">jsonparser&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">user&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//投稿者ID
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">note&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">username&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">jsonparser&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">user&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">username&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">note&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//ホスト名
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">note&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">host&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">jsonparser&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">user&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">host&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">note&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">username&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">note&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">username&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="err">@&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">note&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">host&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 投稿時刻
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">note&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">timestamp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">jsonparser&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">createdAt&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">note&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">t&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ParseInLocation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2006&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">01&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">02&lt;/span>&lt;span class="nx">T15&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mo">04&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mo">05&lt;/span>&lt;span class="nx">Z&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">note&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">timestamp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UTC&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">note&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">timestamp&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">t&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">In&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Local&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2006&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">01&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">02&lt;/span> &lt;span class="mi">15&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mo">04&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mo">05&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 本文
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">note&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">text&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">jsonparser&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">text&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//投稿ID(元投稿)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">note&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">jsonparser&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">note&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//ねこかどうか
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">isCat&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">jsonparser&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetBoolean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">user&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">isCat&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">isCat&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">note&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">note&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">Cat&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ファイルが有れば
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">filesId&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">jsonparser&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">files&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">filesId&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">note&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">attach&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">添付有り&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">note&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>ちなみに、名前欄を赤色にしたり、添付がある場合に緑、投稿IDを青にしているは、&lt;code>\x1b[35m%s(@%s)\x1b[0m\t&lt;/code>といったようなエスケープシーケンスを使って、標準出力側で装飾を指定することで実装しています。(リプライの場合はピンクに)&lt;/p>
&lt;h4 id="リプライ-1">リプライ
&lt;/h4>&lt;p>リプライがある場合は、&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">2022/12/14 23:55:06 名前(@ID@host) リプライ元の投稿 (98xxxxxxxx)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 2022/12/14 23:56:38 名前(@ID@host) リプライ投稿の本文 (添付有り)(98aaaaaaaa)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>といったように表示されます。&lt;/p>
&lt;p>一見リプライ元の投稿の情報を別に取りに行ってるように見えますが、実際はリプライの投稿のJSON内に&lt;code>reply&lt;/code>という要素があり、その中に通常投稿と同じデータ構造で投稿内容が入っています。なので、&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">replyParentValue&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">jsonparser&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">reply&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">replyParent&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">pickNote&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">replyParentValue&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>と書くだけで、リプライ元の投稿の情報を&lt;code>pickNote&lt;/code>を使って持ってくることが出来るのです。&lt;/p>
&lt;p>また、リプライはぶら下がっている印象があるので、&lt;code>noteData&lt;/code>構造体にある&lt;code>offset&lt;/code>にスペース4つをいれ、行頭に挿入することでぶら下がりを表現しています。&lt;/p>
&lt;h4 id="リノート-1">リノート
&lt;/h4>&lt;p>リノートの表示方法もリプライのリプライ元表示に似ています。リプライが&lt;code>reply&lt;/code>要素に投稿が入っていたのと同様に、リノートでも&lt;code>renote&lt;/code>要素に投稿が入っているので、&lt;code>renote&lt;/code>要素を取り出したものを&lt;code>pickNote&lt;/code>に渡すことで投稿内容を取得しています。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">renoteValue&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">jsonparser&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">renote&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">note&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nf">pickNote&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">renoteValue&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>また、リノートの場合は行頭に&lt;code>[RN]&lt;/code>を付加することでリノートであることを表現しています。&lt;/p>
&lt;h3 id="その他表示に関わる部分いつかなにか改善したら追記">その他表示に関わる部分(いつかなにか改善したら追記)
&lt;/h3>&lt;h4 id="1行の文字数">1行の文字数
&lt;/h4>&lt;p>&lt;picture>&lt;img src="https://blog.mikuta0407.net/img/CQPvwPK.png"
loading="lazy"
>
&lt;/picture>
&lt;/p>
&lt;p>&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2022/20221216-misskey-cli/img/18Q90SD_huef44955d97f1b701c4935c959c937c0c_144711_3100x1974_resize_q75_h2_box.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2022/20221216-misskey-cli/img/18Q90SD.jpg"
width="3100"
height="1974"
srcset="https://blog.mikuta0407.net/posts/2022/20221216-misskey-cli/img/18Q90SD_huef44955d97f1b701c4935c959c937c0c_144711_480x0_resize_q75_box.jpg 480w, https://blog.mikuta0407.net/posts/2022/20221216-misskey-cli/img/18Q90SD_huef44955d97f1b701c4935c959c937c0c_144711_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="157"
data-flex-basis="376px"
>
&lt;/picture>
&lt;/p>
&lt;p>misskey-cliでコマンドを叩くと、ヘッダ部分の「=======」の長さがコンソールの幅によって変わることがわかります。&lt;/p>
&lt;p>この「=======」を表示するのは各機能の関数で&lt;code>fmt.Println&lt;/code>内に書かれている&lt;code>printLine()&lt;/code>という関数が表示しています。&lt;/p>
&lt;p>このprintLine()は&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/mikuta0407/misskey-cli/blob/67d17a15d3bff0e7c258f42a61b5d99679e2d164/misskey/misskey.go#L59-L70" target="_blank" rel="noopener"
>https://github.com/mikuta0407/misskey-cli/blob/67d17a15d3bff0e7c258f42a61b5d99679e2d164/misskey/misskey.go#L59-L70&lt;/a>&lt;/p>
&lt;p>でこのように記述しています。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">printLine&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">terminal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetSize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Stdin&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">Error&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="o">%+&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="nx">width&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(=)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>terminal.GetSize(syscall.Stdin)&lt;/code>はターミナルの横幅を取得する関数です。これで貰えた幅の文字数分、「=」を表示することが出来ます。&lt;/p>
&lt;p>……実はこれのせいでmisskey-cliはWindows版がありません。WSL1で動くので許して下さい……。&lt;/p>
&lt;h2 id="まとめ">まとめ
&lt;/h2>&lt;p>やったことをダラダラと書く記事になってしまいましたが、ここまで耐えて読んでくださった方、ありがとうございます。&lt;/p>
&lt;p>初めて非身内なアドカレに参加し、あまりにも強い方々の投稿を見て焦りのような緊張を感じつつ書いていました。(その割に執筆中に未実装機能に気づくなどしていましたが・・・)&lt;/p>
&lt;p>今年は色んな意味でFediverseが話題となり、Misskeyにもいろんな投稿が流れてTLが賑わっているのを楽しく見ています。今年はMisskeyでもあけおめ投稿してみようかな・・・&lt;/p>
&lt;p>そしてTUI版を作ってみようかな・・・(完成するとは言ってない)&lt;/p>
&lt;p>ありがとうございました!&lt;/p></description></item><item><title>都市大YCの卒業研究概要集をMarkdownで快適に書くためのPandoc環境セットアップ備忘録</title><link>https://blog.mikuta0407.net/posts/2021/20211203-tcu-yc-summary-in-md-and-pandoc/</link><pubDate>Fri, 03 Dec 2021 00:00:00 +0900</pubDate><guid>https://blog.mikuta0407.net/posts/2021/20211203-tcu-yc-summary-in-md-and-pandoc/</guid><description>&lt;img src="https://blog.mikuta0407.net/posts/2021/20211203-tcu-yc-summary-in-md-and-pandoc/img/test.md-markdown-Visual-Studio-Code-2021_12_03-0_05_15.png" alt="Featured image of post 都市大YCの卒業研究概要集をMarkdownで快適に書くためのPandoc環境セットアップ備忘録" />&lt;p>この記事は&lt;a class="link" href="https://adventar.org/calendars/6738" target="_blank" rel="noopener"
>Tokyo City University Advent Calendar 2021&lt;/a>の3日目の記事です。&lt;/p>
&lt;p>昨日の記事は &lt;a class="link" href="https://twitter.com/bob510634" target="_blank" rel="noopener"
>@BOB&lt;/a> さんによる &lt;a class="link" href="https://bob563.hatenablog.com/entry/2021/12/02/000431" target="_blank" rel="noopener"
>辻堂にバーガーキングができたらしい - bob563’s diary&lt;/a> でした!&lt;/p>
&lt;p>弘前の人のテンションと同じ感じで好きです。&lt;/p>
&lt;h2 id="はじめに">はじめに
&lt;/h2>&lt;p>4年生の皆様は絶賛卒業研究中かと思われます。お疲れ様です。&lt;/p>
&lt;p>さて、論文や概要集を書くにあたって、Wordで書いていくのはなんとなく嫌な人、いると思います。
Markdownで書いて、いい感じにしてくれれば・・・&lt;/p>
&lt;p>そんなときにはPandocを使って変換していくのですが、環境構築がなかなかに面倒です。&lt;/p>
&lt;p>とりあえず1月に提出するYC用フォーマットの卒業研究概要集を出力できるように整ってきたので、備忘録としてセットアップについて記載してきます。&lt;/p>
&lt;p>(いろいろなところからの寄せ集め情報です。)&lt;/p>
&lt;div style="padding: 10px; margin-bottom: 10px; border: 1px solid #faebcc; background-color: #fcf8e3;">
&lt;b>割と勘の状態でやっており、詳しい人からのツッコミがすごそうな記事なので、むしろそういう方からのツッコミをお待ちしています。よろしくおねがいします。&lt;/b>&lt;br>
設定を複数箇所に渡って指定したりしていますが、何故かそうしないと動かなかったりするんです。助けてください。
&lt;/div>
&lt;h2 id="環境について">環境について
&lt;/h2>&lt;p>本記事ではLinux(Debian/Ubuntu)環境を想定しています。(筆者が実際に使っている環境はWSL1のUbuntu 20.04です。)&lt;br>
Windowsユーザーの人はこの記事通りに行いたい場合はWSL1で良いのでLinux環境を用意してください。多分Windowsネイティブでも出来るとは思いますが、なんにもわかりません。&lt;/p>
&lt;p>macOS(M1, Monterey)でも試していますが、フォントの問題のみ解決できませんでした。ヒラギノでいいなら行けると思います。&lt;/p>
&lt;h2 id="環境構築">環境構築
&lt;/h2>&lt;h3 id="linuxwsldebianubuntu">Linux/WSL(Debian/Ubuntu)
&lt;/h3>&lt;h4 id="pandocのインストール">pandocのインストール
&lt;/h4>&lt;p>ここから最新版のpandocのdebを落としてきます。&lt;br>
執筆時は&lt;code>pandoc-2.16.2-1-amd64.deb&lt;/code>です。&lt;br>
&lt;a class="link" href="https://github.com/jgm/pandoc/releases" target="_blank" rel="noopener"
>Releases · jgm/pandoc&lt;/a>&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wget https://github.com/jgm/pandoc/releases/download/2.16.2/pandoc-2.16.2-1-amd64.deb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo dpkg -i pandoc-2.16.2-1-amd64.deb&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4 id="その他必要なパッケージを入れる">その他必要なパッケージを入れる
&lt;/h4>&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt install texlive texlive-luatex texlive-latex-extra texlive-lang-cjk fonts-ipaexfont &lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>(フォントはとりあえずIPAexにしています。)&lt;/p>
&lt;h4 id="もろもろのテンプレデータ的物を入れるディレクトリを作る">もろもろのテンプレデータ的物を入れるディレクトリを作る
&lt;/h4>&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir ~/markdown&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>このあたりは適宜好きなようにしてください&lt;/p>
&lt;h4 id="pandoc-crossrefを落とす">pandoc-crossrefを落とす
&lt;/h4>&lt;p>ここから&lt;code>pandoc-crossref-Linux.tar.xz&lt;/code>を落として展開します。&lt;br>
&lt;a class="link" href="https://github.com/lierdakil/pandoc-crossref/releases" target="_blank" rel="noopener"
>Releases · lierdakil/pandoc-crossref&lt;/a>&lt;/p>
&lt;p>執筆時は0.3.12.1aでした。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ~/markdown
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://github.com/lierdakil/pandoc-crossref/releases/download/v0.3.12.1a/pandoc-crossref-Linux.tar.xz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xz -dc pandoc-crossref-Linux.tar.xz &lt;span class="p">|&lt;/span> tar xfv -&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>これで~/markdownに&lt;code>pandoc-crossref&lt;/code>という実行ファイルが展開されます。&lt;/p>
&lt;h3 id="macosm1--montereyでテスト">macOS(M1 + Montereyでテスト)
&lt;/h3>&lt;h4 id="pandocのインストール-1">pandocのインストール
&lt;/h4>&lt;p>最新版のpandocのpkgを落としてインストールします(全てのユーザーに対してで良いかと)。&lt;br>
執筆時は&lt;code>pandoc-2.16.2-macOS.pkg&lt;/code>です。&lt;br>
&lt;a class="link" href="https://github.com/jgm/pandoc/releases" target="_blank" rel="noopener"
>Releases · jgm/pandoc&lt;/a>&lt;/p>
&lt;h4 id="その他必要なパッケージを入れる-1">その他必要なパッケージを入れる
&lt;/h4>&lt;p>texlive系のインストールはbrewだと思ったよりめんどくさそうなので、MacPortsを使います。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo port install texlive-lang-japanese texlive-luatex texlive texlive-latex-extra&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>フォントを入れていきますが、macOSだとIPAex明朝ではレンダリングがコケる気がします。まぁインストールすると普通にIPAexフォントがインストールされるだけなのでとりあえず。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">brew install homebrew/cask-fonts/font-ipaexfont&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4 id="もろもろのテンプレデータ的物を入れるディレクトリを作る-1">もろもろのテンプレデータ的物を入れるディレクトリを作る
&lt;/h4>&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir ~/markdown&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>このあたりは適宜好きなようにしてください&lt;/p>
&lt;h4 id="pandoc-crossrefを落とす-1">pandoc-crossrefを落とす
&lt;/h4>&lt;p>ここから&lt;code>pandoc-crossref-Linux.tar.xz&lt;/code>を落として展開します。&lt;br>
&lt;a class="link" href="https://github.com/lierdakil/pandoc-crossref/releases" target="_blank" rel="noopener"
>Releases · lierdakil/pandoc-crossref&lt;/a>&lt;/p>
&lt;p>執筆時は0.3.12.1aでした。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ~/markdown
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">curl -LO https://github.com/lierdakil/pandoc-crossref/releases/download/v0.3.12.1a/pandoc-crossref-macOS.tar.xz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xz -dc pandoc-crossref-macOS.tar.xz &lt;span class="p">|&lt;/span> tar xfv -&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>これで~/markdownに&lt;code>pandoc-crossref&lt;/code>という実行ファイルが展開されます。&lt;/p>
&lt;h3 id="以下linuxmacos共通pandocとpandoc-crossrefのバージョンを確認する">(以下Linux/macOS共通)pandocとpandoc-crossrefのバージョンを確認する
&lt;/h3>&lt;p>pandocとpandoc-crossrefのビルド元pandocバージョンは一致していないと動作しません。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ pandoc -v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pandoc 2.16.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Compiled with pandoc-types 1.22.1, texmath 0.12.3.2, skylighting 0.12.1,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ ./pandoc-crossref -v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pandoc-crossref v0.3.12.1 git commit 0a47293d7d47aa763e82204e13deabc8f1a041c4 &lt;span class="o">(&lt;/span>HEAD&lt;span class="o">)&lt;/span> built with Pandoc v2.16.2, pandoc-types v1.22.1 and GHC 8.10.7&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>上記の場合、pandocが2.16.2、pandoc-crossrefが「built with Pandoc v2.16.2」となっており、一致しています。&lt;/p>
&lt;h3 id="metadatayamlの用意">metadata.yamlの用意
&lt;/h3>&lt;p>図や表、コードなどのPrefixを設定したり、二段組を使う場合に設定したりします。&lt;br>
&lt;code>~/markdown/metadata.yaml&lt;/code>として保存します。&lt;/p>
&lt;p>なぜここにTitleやAuthorが入っていないのか、という点については、冒頭部分のレイアウトを自分で制御したいからというのがあります(テンプレートを弄る気力がないので)。後述します。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">figureTitle&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;図 &amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">tableTitle&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;表 &amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">listingTitle&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;コード &amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">figPrefix&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;図&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">eqnPrefix&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;式&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">tblPrefix&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;表&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">lstPrefix&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;コード&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">codeBlockCaptions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">listings&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 見出し番号自動で付ける&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">numbersections&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 左右に段組みにする場合&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">header-includes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">\documentclass[twocolumn, a4j]{jarticle}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="makeyamlの用意">make.yamlの用意
&lt;/h3>&lt;p>生成するときのオプションをまとめて書いておいたyamlファイルを用意して、生成コマンドが長くならないようにします。&lt;/p>
&lt;p>&lt;strong>macOSの場合、CJKmainfontをIPAexMinchoにしても読み込まれないことがあるので、&lt;code>luatexjapresetoptions&lt;/code>と&lt;code>CJKmainfont&lt;/code>をコメントアウトしてデフォルトのヒラギノ明朝にしたほうが良いかも知れません&lt;/strong>&lt;/p>
&lt;p>フォントサイズが11ptになっていますが、だいたいこれで10.5ptと同じくらいです。&lt;br>
&lt;a class="link" href="http://denki.nara-edu.ac.jp/~yabu/soft/tex/tex.html#:~:text=%E4%BE%8B%E3%81%88%E3%81%B0%E3%80%81MS%2DWord%20%E3%81%A7%E3%81%AF%E3%83%87%E3%83%95%E3%82%A9%E3%83%AB%E3%83%88%E3%81%AE%E5%92%8C%E6%96%87%E6%96%87%E5%AD%97%E3%82%B5%E3%82%A4%E3%82%BA%E3%81%AF%2010.5%20pt%20%E3%81%A7%E3%81%99%E3%80%82%20%E3%81%93%E3%82%8C%E3%81%AB%E5%AF%BE%E5%BF%9C%E3%81%99%E3%82%8B%E3%81%AE%E3%81%AF%20TeX%20%E3%81%A7%E3%81%AF%20%5Cdocumentstyle%5B11pt%5D%7Bjarticle%7D%20%E3%81%A7%E3%81%99%E3%80%82%2011%20pt%20%E3%81%AE%E3%81%A8%E3%81%8D%E3%81%A0%E3%81%91%E3%80%81%20%E5%92%8C%E6%96%87%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%81%A8%E8%8B%B1%E6%96%87%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%81%AE%E5%A4%A7%E3%81%8D%E3%81%95%E3%81%AE%E6%AF%94%E7%8E%87%E3%81%8C%20%E7%95%B0%E3%81%AA%E3%81%A3%E3%81%A6%E3%81%84%E3%82%8B%E3%81%93%E3%81%A8%E3%81%AB%E6%B3%A8%E6%84%8F%E3%81%97%E3%81%A6%E3%81%8F%E3%81%A0%E3%81%95%E3%81%84%E3%80%82" target="_blank" rel="noopener"
>TeX を使った論文作成のノウハウ&lt;/a>&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">filters&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">pandoc-crossref&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">pdf-engine&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">lualatex&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">standalone&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">metadata-files&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">metadata.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">variables&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">documentclass&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ltjarticle&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">classoption&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pandoc&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 上下左右余白&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">geometry&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">top=2cm&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">bottom=2cm&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">left=2cm&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">right=2cm&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 11pt≒10.5pt&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">fontsize&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">11pt&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># フォント設定&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">luatexjapresetoptions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">IPAexMincho&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">CJKmainfont&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">IPAexMincho&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 行間設定 これで縦を37行に&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">linestretch&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1.28&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 字下げ設定&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">indent&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">include-in-header&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">header.tex&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">listings&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">csl&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">sist02&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="headertexの用意">header.texの用意
&lt;/h3>&lt;p>以下の内容を記載した&lt;code>~/markdown/header.tex&lt;/code>を用意します&lt;/p>
&lt;p>コードブロックがない場合はコードブロックの色設定は必要ないですが、最後のrenewcommandの行が無いと、図などのキャプションが英語のままになります。(さっきyamlで設定したのになんで?)&lt;/p>
&lt;p>色設定等は&lt;a class="link" href="https://yurkth.hateblo.jp/entry/pandoc-markdown" target="_blank" rel="noopener"
>Pandocを使ってMarkdownでレポートを書いてみる - 屋根裏&lt;/a> より拝借しました。&lt;/p>
&lt;p>図の位置については &lt;a class="link" href="https://nyarrix.com/blog/2019/09/09/rmarkdown-to-pdf/" target="_blank" rel="noopener"
>R Markdownでpdf出力する時の図の位置設定 | Nylog&lt;/a> より拝借しました。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="line">&lt;span class="cl">&lt;span class="k">\usepackage&lt;/span>&lt;span class="nb">{&lt;/span>listings&lt;span class="nb">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">\usepackage&lt;/span>&lt;span class="nb">{&lt;/span>xcolor&lt;span class="nb">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">\usepackage&lt;/span>&lt;span class="nb">{&lt;/span>url&lt;span class="nb">}&lt;/span> &lt;span class="c">% 参考文献用
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="k">\usepackage&lt;/span>&lt;span class="nb">{&lt;/span>titlesec&lt;span class="nb">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">% 見出しのフォント設定を特に大きくせず他と同じにする
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="k">\titleformat*&lt;/span>&lt;span class="nb">{&lt;/span>&lt;span class="k">\section&lt;/span>&lt;span class="nb">}{&lt;/span>&lt;span class="k">\selectfont\rmfamily&lt;/span>&lt;span class="nb">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">\titleformat*&lt;/span>&lt;span class="nb">{&lt;/span>&lt;span class="k">\subsection&lt;/span>&lt;span class="nb">}{&lt;/span>&lt;span class="k">\selectfont\rmfamily&lt;/span>&lt;span class="nb">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">% 二段組の間の間隔 これで横を22文字に
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="k">\setlength&lt;/span>&lt;span class="nb">{&lt;/span>&lt;span class="k">\columnsep&lt;/span>&lt;span class="nb">}{&lt;/span>1cm&lt;span class="nb">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">% コードブロックの色設定
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="k">\lstset&lt;/span>&lt;span class="nb">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> basicstyle=&lt;span class="k">\ttfamily&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> keywordstyle=&lt;span class="k">\color&lt;/span>&lt;span class="na">[rgb]&lt;/span>&lt;span class="nb">{&lt;/span>0,0,0.6&lt;span class="nb">}&lt;/span>&lt;span class="k">\bfseries&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> stringstyle=&lt;span class="k">\color&lt;/span>&lt;span class="na">[rgb]&lt;/span>&lt;span class="nb">{&lt;/span>0,0.6,0&lt;span class="nb">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> commentstyle=&lt;span class="k">\color&lt;/span>&lt;span class="na">[rgb]&lt;/span>&lt;span class="nb">{&lt;/span>0.4,0.4,0.4&lt;span class="nb">}&lt;/span>&lt;span class="k">\itshape&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> numberstyle=&lt;span class="k">\ttfamily&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> numbers=none,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> stepnumber=1,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> numbersep=15pt,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> numberstyle=&lt;span class="k">\color&lt;/span>&lt;span class="na">[rgb]&lt;/span>&lt;span class="nb">{&lt;/span>0.6,0.6,0.6&lt;span class="nb">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> tabsize=4,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> breaklines=true,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> captionpos=t,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> frame=single,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> rulecolor=&lt;span class="k">\color&lt;/span>&lt;span class="na">[rgb]&lt;/span>&lt;span class="nb">{&lt;/span>0.8,0.8,0.8&lt;span class="nb">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> backgroundcolor=&lt;span class="k">\color&lt;/span>&lt;span class="na">[rgb]&lt;/span>&lt;span class="nb">{&lt;/span>0.95,0.95,0.95&lt;span class="nb">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> showspaces=false,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> showtabs=false,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> showstringspaces=false
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">\renewcommand&lt;/span>&lt;span class="nb">{&lt;/span>&lt;span class="k">\lstlistingname&lt;/span>&lt;span class="nb">}{&lt;/span>コード&lt;span class="nb">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">% 図の位置を書いた位置にする
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="k">\usepackage&lt;/span>&lt;span class="nb">{&lt;/span>float&lt;span class="nb">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">\let\origfigure\figure&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">\let\endorigfigure\endfigure&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">\renewenvironment&lt;/span>&lt;span class="nb">{&lt;/span>figure&lt;span class="nb">}&lt;/span>[1][2] &lt;span class="nb">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">\expandafter\origfigure\expandafter&lt;/span>&lt;span class="na">[H]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">}&lt;/span> &lt;span class="nb">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">\endorigfigure&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="referencesbibの用意">references.bibの用意
&lt;/h3>&lt;p>これは実際のMarkdownファイルがある場所に作ります。&lt;/p>
&lt;p>参考文献を突っ込んでいくファイルです。&lt;/p>
&lt;p>BiBTeX形式で記載します。&lt;br>
どんなものか、については &lt;a class="link" href="https://qiita.com/SUZUKI_Masaya/items/14f9727845e020f8e7e9#web%E3%83%9A%E3%83%BC%E3%82%B8%E3%82%92%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE%E3%81%A8%E3%81%97%E3%81%A6%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88" target="_blank" rel="noopener"
>BiBTeXとは - Qiita&lt;/a> を参考にして下さい。&lt;/p>
&lt;h3 id="sist02cslの用意">sist02.cslの用意
&lt;/h3>&lt;p>&lt;a class="link" href="https://www.zotero.org/styles?q=id%3Asist02" target="_blank" rel="noopener"
>Zotero Style Repository&lt;/a> から&lt;code>sist02.csl&lt;/code>をダウンロードします(「SIST02 (日本語)」&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wget https://www.zotero.org/styles/sist02 -O sist02.csl&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>これは参考文献のスタイルをいい感じにしてくれるものなのですが、リスト表記時や文章内の参照番号が「(1)」のように普通のカッコになってしまうので、これを&lt;code>[1]&lt;/code>のようになるよう、書き換えます。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sed -i -e &lt;span class="s1">&amp;#39;s/prefix=&amp;#34;(&amp;#34;/prefix=&amp;#34;[&amp;#34;/g&amp;#39;&lt;/span> sist02.csl
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i -e &lt;span class="s1">&amp;#39;s/suffix=&amp;#34;)&amp;#34;/suffix=&amp;#34;]&amp;#34;/g&amp;#39;&lt;/span> sist02.csl&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h2 id="生成コマンド">生成コマンド
&lt;/h2>&lt;p>hoge.mdをhoge.pdfにする、というものなのですが、実はPandocのバージョンの諸々で、参考文献が入っていると&lt;br>
&lt;code>\vadjust pre&lt;/code>というコマンドが挿入され、lualatexがエラーを吐きます。&lt;br>
( &lt;a class="link" href="https://issueexplorer.com/issue/jgm/pandoc/7534" target="_blank" rel="noopener"
>Error with \vadjust when loading luatexja package - Jgm/Pandoc&lt;/a> )&lt;/p>
&lt;p>色々検証してみたところ、一度pandocでPDFではなくtexファイルを出力し、当該部分を削除してlualatexでコンパイルするのが良さそうです。&lt;/p>
&lt;p>ということで、いきなりですが生成関数を.bashrcや.zshrcに記載します。&lt;/p>
&lt;p>(なんでtex出力なのにmake.yamlでpdf-engineを書いたんだ、という話になりそうですが、別に存在してても構わなそうなので許してください)&lt;/p>
&lt;h3 id="bashzsh用function">bash/zsh用function
&lt;/h3>&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="k">function&lt;/span> mdtopdf &lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 終了後にもとのディレクトリに戻れるように現在のディレクトリを取得&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">origdir&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="nb">pwd&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># ファイル名から拡張子を取り除いたものを取得&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$1&lt;/span> &lt;span class="p">|&lt;/span> sed -e &lt;span class="s1">&amp;#39;s/\.md//&amp;#39;&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 指定されたmarkdownがあるディレクトリの絶対パスを取得&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">dirpath&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">cd&lt;/span> &lt;span class="k">$(&lt;/span>dirname &lt;span class="nv">$1&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">pwd&lt;/span>&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># いろいろな設定ファイルがある~/markdownに移動&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">cd&lt;/span> ~/markdown
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># pandocでtexファイルを生成&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pandoc -d make.yaml &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --bibliography&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">dirpath&lt;/span>&lt;span class="si">}&lt;/span>/references.bib &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --resource-path&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">dirpath&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --cite &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --csl&lt;span class="o">=&lt;/span>sist02 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -f markdown+hard_line_breaks &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">dirpath&lt;/span>&lt;span class="si">}&lt;/span>/&lt;span class="si">${&lt;/span>&lt;span class="nv">file&lt;/span>&lt;span class="si">}&lt;/span>.md &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -o &lt;span class="si">${&lt;/span>&lt;span class="nv">dirpath&lt;/span>&lt;span class="si">}&lt;/span>/&lt;span class="si">${&lt;/span>&lt;span class="nv">file&lt;/span>&lt;span class="si">}&lt;/span>.tex
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># もとのディレクトリに戻る&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">cd&lt;/span> &lt;span class="nv">$origdir&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># texファイルからいらない部分を消す&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sed -i -e &lt;span class="s1">&amp;#39;s/\\vadjust pre{\(.*\)}%/\1/&amp;#39;&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">file&lt;/span>&lt;span class="si">}&lt;/span>.tex
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># コンパイルする&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> lualatex &lt;span class="si">${&lt;/span>&lt;span class="nv">file&lt;/span>&lt;span class="si">}&lt;/span>.tex
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="使い方">使い方
&lt;/h3>&lt;ul>
&lt;li>準備:
上記コマンドを.bashrcや、.bashrcでsourceを使って読み込ませる別ファイル等に記載し、読み込ませます。&lt;/li>
&lt;li>mdファイル、references.bib、画像等のディレクトリについて:
どこでも構いませんが、
&lt;ul>
&lt;li>hoge.md&lt;/li>
&lt;li>references.bib&lt;/li>
&lt;li>画像または画像が入ったディレクトリ
は同じ位置に置いてください(画像に関してはresource-pathでmdファイルと同じ階層以下を指定しているので)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>実行方法
&lt;ol>
&lt;li>&lt;code>mdtopdf hoge.md&lt;/code>と実行します&lt;/li>
&lt;li>hoge.mdと同じ場所にhoge.pdfが生成されます。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h2 id="markdownの書き方">Markdownの書き方
&lt;/h2>&lt;p>基本はMarkdownなのですが、一部専用の書き方を行います。&lt;/p>
&lt;h3 id="冒頭について">冒頭について
&lt;/h3>&lt;p>PandocでTitleやAuthorをつけると自動でいい感じにタイトルや著者名をやってくれるのですが、&lt;/p>
&lt;p>&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2021/20211203-tcu-yc-summary-in-md-and-pandoc/img/aSgu1zE_hu94e126b98fc697720a799bbe0e310341_9791_717x188_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2021/20211203-tcu-yc-summary-in-md-and-pandoc/img/aSgu1zE.png"
width="717"
height="188"
srcset="https://blog.mikuta0407.net/posts/2021/20211203-tcu-yc-summary-in-md-and-pandoc/img/aSgu1zE_hu94e126b98fc697720a799bbe0e310341_9791_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2021/20211203-tcu-yc-summary-in-md-and-pandoc/img/aSgu1zE_hu94e126b98fc697720a799bbe0e310341_9791_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="381"
data-flex-basis="915px"
>
&lt;/picture>
&lt;br>
(これはWord)&lt;/p>
&lt;p>こういうことをしたいので、自作します。&lt;/p>
&lt;p>yamlで二段組を指定していますが、ここは一段組になるため、&lt;code>\twocolumn[]&lt;/code>で囲って一段組にします。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="line">&lt;span class="cl">&lt;span class="k">\twocolumn&lt;/span>[
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>flushleft&lt;span class="nb">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2021年度卒業研究概要&lt;span class="k">\\&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">\vskip\baselineskip&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>flushleft&lt;span class="nb">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>center&lt;span class="nb">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">\fontsize&lt;/span>&lt;span class="nb">{&lt;/span>14pt&lt;span class="nb">}{&lt;/span>11pt&lt;span class="nb">}&lt;/span>&lt;span class="k">\selectfont&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ここにタイトル
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">\vskip\baselineskip&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>center&lt;span class="nb">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>flushright&lt;span class="nb">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">美しい時代へ 研究室&lt;span class="k">\\&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0000000 五島 慶太&lt;span class="k">\\&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>flushright&lt;span class="nb">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">\vskip\baselineskip&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">]&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2021/20211203-tcu-yc-summary-in-md-and-pandoc/img/mK57Ung_hu3ac0f573df353ba83f553435dbe0cebd_26512_1024x298_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2021/20211203-tcu-yc-summary-in-md-and-pandoc/img/mK57Ung.png"
width="1024"
height="298"
srcset="https://blog.mikuta0407.net/posts/2021/20211203-tcu-yc-summary-in-md-and-pandoc/img/mK57Ung_hu3ac0f573df353ba83f553435dbe0cebd_26512_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2021/20211203-tcu-yc-summary-in-md-and-pandoc/img/mK57Ung_hu3ac0f573df353ba83f553435dbe0cebd_26512_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="343"
data-flex-basis="824px"
>
&lt;/picture>
&lt;/p>
&lt;p>(出力したPDF)&lt;/p>
&lt;p>こんな感じです。&lt;/p>
&lt;h3 id="キャプション参照について">キャプション・参照について
&lt;/h3>&lt;h4 id="画像">画像
&lt;/h4>&lt;p>画像に関しては、&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">![&lt;span class="nt">画像の説明&lt;/span>](&lt;span class="na">img/hoge.jpg&lt;/span>){#fig:識別名}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>と挿入し、参照するときは&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">〇〇を[@fig:識別名]に示す。&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>と記述することで行なえます。&lt;/p>
&lt;h4 id="参考文献参照">参考文献参照
&lt;/h4>&lt;p>references.bibには以下のように記入します。(これはURLの例です。BibTex形式なので調べるとたくさん出てきます。)&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bib" data-lang="bib">&lt;span class="line">&lt;span class="cl">&lt;span class="nc">@misc&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nl">tcu-namechange:online&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">author&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">{学校法人 五島育英会}&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">title&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">{武蔵工業大学の名称変更並びにこれに伴う設置学校の名称変更について}&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">url&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">{http://goto-ikuei.ac.jp/01topics/2007/files/080314-TCU-release1.pdf}&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">year&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">{2008}&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">month&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">{3}&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">language&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">{ja}&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">urldate&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">{2021-12-01}&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>Markdownにはこのように参照させます。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">武蔵工業大学は平成21年4月より武蔵工業大学へと名称変更を行った[@tcu-namechange:online].&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h2 id="実演">実演
&lt;/h2>&lt;h3 id="markdown">Markdown
&lt;/h3>&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">\twocolumn[
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">\begin{flushleft}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2021年度卒業研究概要\\
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">\vskip\baselineskip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">\end{flushleft}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">\begin{center}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">\fontsize{14pt}{10.5pt}\selectfont
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ここにはタイトル
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">\vskip\baselineskip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">\end{center}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">\begin{flushright}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">東急グループ\\
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">五島慶太\\
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">\end{flushright}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">\vskip\baselineskip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gh"># はじめに
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gh">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">こんにちは．にゃーん
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">![&lt;span class="nt">楽しいインターネットのイラスト&lt;/span>](&lt;span class="na">img/internet_heiwa.png&lt;/span>){#fig:インターネット平和}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">インターネットのあるべき姿を[@fig:インターネット平和]に示す．
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">これはとても平和である．
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">武蔵工業大学は平成21年4月より武蔵工業大学へと名称変更を行った[@tcu-namechange:online]．
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">他にはこんな感じ[@kizi-rei]．
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gh"># 吾輩は猫である
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gh">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">## 最初のところ
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">吾輩わがはいは猫である。名前はまだ無い。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">(略)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">## 続き
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ようやくの思いで笹原を這い出すと向うに大きな池がある。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">(略)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 参考文献&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="pdf">PDF
&lt;/h3>&lt;p>&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2021/20211203-tcu-yc-summary-in-md-and-pandoc/img/4XdXbrr_hu730a5114261a8868ffc93b96109f6af0_550187_1241x1754_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2021/20211203-tcu-yc-summary-in-md-and-pandoc/img/4XdXbrr.png"
width="1241"
height="1754"
srcset="https://blog.mikuta0407.net/posts/2021/20211203-tcu-yc-summary-in-md-and-pandoc/img/4XdXbrr_hu730a5114261a8868ffc93b96109f6af0_550187_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2021/20211203-tcu-yc-summary-in-md-and-pandoc/img/4XdXbrr_hu730a5114261a8868ffc93b96109f6af0_550187_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="70"
data-flex-basis="169px"
>
&lt;/picture>
&lt;/p>
&lt;p>&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2021/20211203-tcu-yc-summary-in-md-and-pandoc/img/cME4e9K_hu0c30ee082dd3a6b648a62b652426fd73_576436_1241x1754_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2021/20211203-tcu-yc-summary-in-md-and-pandoc/img/cME4e9K.png"
width="1241"
height="1754"
srcset="https://blog.mikuta0407.net/posts/2021/20211203-tcu-yc-summary-in-md-and-pandoc/img/cME4e9K_hu0c30ee082dd3a6b648a62b652426fd73_576436_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2021/20211203-tcu-yc-summary-in-md-and-pandoc/img/cME4e9K_hu0c30ee082dd3a6b648a62b652426fd73_576436_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="70"
data-flex-basis="169px"
>
&lt;/picture>
&lt;/p>
&lt;h2 id="〆">〆
&lt;/h2>&lt;p>YCの卒業研究概要集をMarkdown+Pandocで書くセットアップについて書きましたが、セットアップに割いた時間をおとなしくWordで書くことに費やしていれば今頃7割位完成していたような気がします。&lt;/p>
&lt;p>慣れない作業でめちゃくちゃ疲れましたが、いつか誰かの役に立てば・・・。&lt;/p>
&lt;p>明日は&lt;a class="link" href="https://twitter.com/gitercccahuud" target="_blank" rel="noopener"
>@gitercccahuud&lt;/a>さんによる「老害大学院生ツイッタラーが教える情報システム学科完全攻略法」です!&lt;/p>
&lt;h2 id="参考文献">参考文献
&lt;/h2>&lt;p>&lt;a class="link" href="https://laclefyoshi.hatenablog.com/entry/20150616/crossref" target="_blank" rel="noopener"
>Markdownで相互参照を使うならpandoc-crossref - DiaryException&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://yurkth.hateblo.jp/entry/pandoc-markdown" target="_blank" rel="noopener"
>Pandocを使ってMarkdownでレポートを書いてみる - 屋根裏&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://qiita.com/sky_y/items/3c5c46ebd319490907e8#linux--win2-wslubuntu%E3%82%A2%E3%83%97%E3%83%AA%E3%81%AA%E3%81%A9" target="_blank" rel="noopener"
>Pandocの比較的簡単なインストール方法 - Qiita&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://blog.8tak4.com/post/168232661994/know-how-writing-thesis-markdown" target="_blank" rel="noopener"
>学位論文を書く準備 - プらチナの日記&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://qiita.com/nmxi/items/2179a3da442bdf8f74a6" target="_blank" rel="noopener"
>TeX書式ノート - Qiita&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://gg-hogehoge.hatenablog.com/entry/2013/08/13/145138" target="_blank" rel="noopener"
>TeX文書で, 本文は2段, 概要は1段で表示させたい - 300億円欲しい&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://pandoc-doc-ja.readthedocs.io/ja/latest/users-guide.html" target="_blank" rel="noopener"
>Pandoc User’s Guide 日本語版 — 日本Pandocユーザ会&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://qiita.com/sky_y/items/b243c2618706605e5fdd" target="_blank" rel="noopener"
>[Pandoc 2.8 新機能] 長いオプションをファイルにまとめるDefault file - Qiita&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://qiita.com/Kumassy/items/5b6ae6b99df08fb434d9" target="_blank" rel="noopener"
>まだ Word で消耗してるの？ 大学のレポートを Markdown で書こう - Qiita&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://zenn.dev/sky_y/articles/pandoc-advent-2020-bib2" target="_blank" rel="noopener"
>Pandocで参考文献リストを処理する扱う方法 (PandocとZoteroで参考文献：後編)&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://qiita.com/SUZUKI_Masaya/items/14f9727845e020f8e7e9#web%E3%83%9A%E3%83%BC%E3%82%B8%E3%82%92%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE%E3%81%A8%E3%81%97%E3%81%A6%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88" target="_blank" rel="noopener"
>BiBTeXとは - Qiita&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://stakizawa.hatenablog.com/entry/20070608/t1" target="_blank" rel="noopener"
>BibtexでURLを参考文献にする方法 - 日々の報告書&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://gedevan-aleksizde.github.io/rmarkdown-cookbook/latex-variables.html" target="_blank" rel="noopener"
>6.2 LaTeX 出力の Pandoc オプション | R Markdown クックブック&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://qiita.com/sky_y/items/15bf7737f4b37da50372" target="_blank" rel="noopener"
>メモ: Pandoc+LaTeXで気軽に日本語PDFを出力する - Qiita&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://qiita.com/roaming_south/items/ea39b9554167fcaba882" target="_blank" rel="noopener"
>TeXのセクションの大きさを変更する - Qiita&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="http://denki.nara-edu.ac.jp/~yabu/soft/tex/tex.html#:~:text=%E4%BE%8B%E3%81%88%E3%81%B0%E3%80%81MS%2DWord%20%E3%81%A7%E3%81%AF%E3%83%87%E3%83%95%E3%82%A9%E3%83%AB%E3%83%88%E3%81%AE%E5%92%8C%E6%96%87%E6%96%87%E5%AD%97%E3%82%B5%E3%82%A4%E3%82%BA%E3%81%AF%2010.5%20pt%20%E3%81%A7%E3%81%99%E3%80%82%20%E3%81%93%E3%82%8C%E3%81%AB%E5%AF%BE%E5%BF%9C%E3%81%99%E3%82%8B%E3%81%AE%E3%81%AF%20TeX%20%E3%81%A7%E3%81%AF%20%5Cdocumentstyle%5B11pt%5D%7Bjarticle%7D%20%E3%81%A7%E3%81%99%E3%80%82%2011%20pt%20%E3%81%AE%E3%81%A8%E3%81%8D%E3%81%A0%E3%81%91%E3%80%81%20%E5%92%8C%E6%96%87%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%81%A8%E8%8B%B1%E6%96%87%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%81%AE%E5%A4%A7%E3%81%8D%E3%81%95%E3%81%AE%E6%AF%94%E7%8E%87%E3%81%8C%20%E7%95%B0%E3%81%AA%E3%81%A3%E3%81%A6%E3%81%84%E3%82%8B%E3%81%93%E3%81%A8%E3%81%AB%E6%B3%A8%E6%84%8F%E3%81%97%E3%81%A6%E3%81%8F%E3%81%A0%E3%81%95%E3%81%84%E3%80%82" target="_blank" rel="noopener"
>TeX を使った論文作成のノウハウ&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://twitter.com/kdmsnr/status/1395652667444133892" target="_blank" rel="noopener"
>(1) 角 征典／Masanori KadoさんはTwitterを使っています 「この変更でコンパイルが通らなくなったんだけど、何をしてるのかわからん。。。 https://t.co/8BUh8s84xm」 / Twitter&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://issueexplorer.com/issue/jgm/pandoc/7534" target="_blank" rel="noopener"
>Error with \vadjust when loading luatexja package - Jgm/Pandoc&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://nyarrix.com/blog/2019/09/09/rmarkdown-to-pdf/" target="_blank" rel="noopener"
>R Markdownでpdf出力する時の図の位置設定 | Nylog&lt;/a>&lt;/p></description></item><item><title>SubsonicのストレージとしてGoogleDriveを使う方法(Linux)</title><link>https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/</link><pubDate>Sat, 06 Mar 2021 16:32:00 +0900</pubDate><guid>https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/</guid><description>&lt;p>(この記事は、諸事情により2つのサイトに掲載しています)&lt;/p>
&lt;p>個人運用できる音楽ストリーミングサービスソフトであるSubsonic(やそのフォーク)と、GoogleDriveを組み合わせて使うお話です。&lt;/p>
&lt;p>Subsonic系は、NextCloudのようにGoogleDriveをツール側でマウントすることが出来ません。基本的にサーバー内のディレクトリを指定する必要があります。&lt;br>
この場合、GoogleDriveを何らかの形で通常のディレクトリと同じように扱えるようにしてあげる必要が出てきます。&lt;/p>
&lt;p>ということで、今回はSubsonicのストレージとしてgoogle-drive-ocamlfuseでGoogleDriveを使うお話です。&lt;/p>
&lt;h2 id="構成概要図">構成概要図
&lt;/h2>&lt;p>&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/pRRrLqz_hu3a7b7044c3994015a2e7856aeceaa640_273955_1925x1565_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/pRRrLqz.png"
width="1925"
height="1565"
srcset="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/pRRrLqz_hu3a7b7044c3994015a2e7856aeceaa640_273955_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/pRRrLqz_hu3a7b7044c3994015a2e7856aeceaa640_273955_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="123"
data-flex-basis="295px"
>
&lt;/picture>
&lt;/p>
&lt;p>よくわからない図ですが、まぁネットワークドライブをマウントして、という感じですね。&lt;/p>
&lt;p>毎回インターネットからデータを引っ張ってくるということはその分曲の再生までに時間がかかることにはなりますが、FLACの曲でも一曲十数MBだったりするので、思ったより再生までには時間かからないです。ここはサーバー側の下り回線速度依存ですね。&lt;/p>
&lt;p>今回はサーバーとして使うLinux機はUbuntu 18.04を使っています。ソフトウェアのインストール系とかは適宜読み替えてください。&lt;/p>
&lt;h2 id="subsonicのインストール">Subsonicのインストール
&lt;/h2>&lt;p>基本的に公式サイト (&lt;a class="link" href="http://www.subsonic.org/pages/installation.jsp#debian" target="_blank" rel="noopener"
>http://www.subsonic.org/pages/installation.jsp#debian&lt;/a>)の方法で十分ですが、一応触れます&lt;/p>
&lt;p>まずJavaをインストールします&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt install openjdk-8-jre&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>ffmpegを入れていない場合は入れます&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt install ffmpeg&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>Subsonicのダウンロードをします。 &lt;a class="link" href="http://www.subsonic.org/pages/download.jsp" target="_blank" rel="noopener"
>http://www.subsonic.org/pages/download.jsp&lt;/a> からdebを拾ってきます。&lt;/p>
&lt;p>インストールします&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo dpkg -i subsonic-x.x.deb&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>起動します&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo service subsonic start&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>subsonicをrootで実行するのかどうかという問題はあるのですが、まぁそこは今回はスルーします。&lt;/p>
&lt;p>ブラウザからアクセスします ( &lt;code>http://サーバアドレス:4040&lt;/code> )&lt;br>
(Apache2の場合VirtualHostでProxyさせると、443でSSL通信できて便利です。その話はいつか書きます。)&lt;/p>
&lt;p>Subsonicの設定方法は割愛しますが、設定→音楽フォルダのところを後で触ります。&lt;/p>
&lt;h2 id="googledriveへの接続google-drive-ocamlfuseの設定">GoogleDriveへの接続(google-drive-ocamlfuseの設定)
&lt;/h2>&lt;p>&lt;strong>注: 多分なにか方法はある気がするんですが、面倒なのでGUIが使える環境にして行うと良いです。X11の転送でも良いかもしれませんが、こちらでは未検証です。LXDE入れてChromiumがある環境で作業しました。&lt;/strong>&lt;/p>
&lt;p>&lt;strong>注: これから行う作業は、ユーザーが自分ひとりしかいないような環境を想定しています。GoogleDriveマウント時の権限設定さえちゃんとすればもちろん他のユーザーがいても大丈夫にはなりますが、そこは触れません。&lt;/strong>&lt;/p>
&lt;h3 id="インストール">インストール
&lt;/h3>&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo add-apt-repository ppa:alessandro-strada/ppa
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install google-drive-ocamlfuse&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="認証">認証
&lt;/h3>&lt;p>Firefoxでやったらうまく行かなかったのでChromiumのほうが良いです。&lt;br>
また、なんとなくGoogleDriveへの認証をrootで行いたくはないので、ここは通常ユーザーで行います。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">google-drive-ocamlfuse&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>を単独で叩くと、ブラウザが立ち上がってGoogleアカウントの認証が行われます。指示に従うだけでOKです、これといって特別な操作は必要ありません。&lt;/p>
&lt;h3 id="etcfuseconfの編集">/etc/fuse.confの編集
&lt;/h3>&lt;p>google-drive-ocamlfuseでマウントしたディレクトリは、権限がすべて「?」になり、他のユーザーからはアクセスできなくなります。共有するときにオプションを付けると回避できますが、そのために/etc/fuse.confを編集する必要があります。&lt;/p>
&lt;div>&lt;div class="codeblock--name">/etc/fuse.conf&lt;/div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># user_allow_other&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>↓(コメントアウト)&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">user_allow_other&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="ディレクトリの作成">ディレクトリの作成
&lt;/h3>&lt;p>今回は&lt;code>/mnt/gdrive&lt;/code>にマウントしてみます。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ディレクトリの作成&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo mkdir /mnt/gdrive
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># マウントするのはsudoではないので一旦所有者等を渡す&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo chown &lt;span class="nv">$USER&lt;/span>:&lt;span class="nv">$USER&lt;/span> /mnt/gdrive
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># マウント&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">google-drive-ocamlfuse -o allow_other /mnt/gdrive&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>これで、&lt;code>/mnt/gdrive&lt;/code>にアクセスすると、レスポンスは少し遅いですがGoogleDriveの中身が見れるようになったはずです。&lt;/p>
&lt;h3 id="subsonicでディレクトリの指定初回スキャン">Subsonicでディレクトリの指定+初回スキャン
&lt;/h3>&lt;p>こんな感じでディレクトリの指定をしてあげます。&lt;br>
&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/Oms5eAA_huaa1a6c62baf8f57e10ca44c275cd2344_2975_549x27_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/Oms5eAA.png"
width="549"
height="27"
srcset="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/Oms5eAA_huaa1a6c62baf8f57e10ca44c275cd2344_2975_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/Oms5eAA_huaa1a6c62baf8f57e10ca44c275cd2344_2975_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="2033"
data-flex-basis="4880px"
>
&lt;/picture>
&lt;/p>
&lt;p>保存ボタンを押した後勝手にスキャンが始まれば良いのですが、始まらない場合は手動でスキャン開始させてあげます。ネットワークドライブということもあって、初回スキャンはまぁまぁ時間がかかってしまいます。&lt;/p>
&lt;p>&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/qhKMZs6_hud81ae6122ec3c0451bc6437312b32954_50324_711x376_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/qhKMZs6.png"
width="711"
height="376"
srcset="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/qhKMZs6_hud81ae6122ec3c0451bc6437312b32954_50324_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/qhKMZs6_hud81ae6122ec3c0451bc6437312b32954_50324_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="189"
data-flex-basis="453px"
>
&lt;/picture>
&lt;/p>
&lt;p>高速アクセスモードに関しては、設定すればサーバー内にキャッシュをしてくれるようになるのですが、容量を食わせたくない場合やラズパイのように容量が少ない場合はオフにしといても良いです。一度再生された曲を再び再生するときにGoogleDriveから引っ張ってこないだけです。&lt;/p>
&lt;p>スキャンが終わると、一覧に曲が表示されます。再生するとちょっと待ちはありますが、許容範囲の時間で曲が表示されます。&lt;/p>
&lt;p>おめでとうございます!環境構築成功です!&lt;br>
・・・と簡単には終わらないのがGoogleDrive連携です。&lt;/p>
&lt;h2 id="更新を検知してtouchさせるようにする">更新を検知してtouchさせるようにする
&lt;/h2>&lt;p>さて、先程までの設定だけだと何が問題か、というと、&lt;/p>
&lt;p>&lt;strong>GoogleDriveに新しくフォルダや曲を追加してもスキャンで反映されない&lt;/strong>&lt;/p>
&lt;p>という致命的な問題が発生します。初回スキャンで読み込んだファイル以外の認識を一切しません。&lt;/p>
&lt;p>これSubsonicだけでなく、フォークであるJpsonicでも同様に発生します。&lt;/p>
&lt;p>さて、なんでこのようなことが起こるかというと、Subsonicのスキャンシステムの話と、GoogleDriveのタイムスタンプシステムの話が出てきます。&lt;/p>
&lt;p>どういうことなのか、先にタイムスタンプの話について、画像を交えながらご説明します。&lt;/p>
&lt;h3 id="通常のlinuxのディレクトリの場合">通常のLinuxのディレクトリの場合
&lt;/h3>&lt;p>例として、こんなディレクトリ構造があったとします。&lt;br>
&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/n7vEwFV_hu59727809d2bf1b5d9ba7a18a34a00d36_6939_424x148_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/n7vEwFV.png"
width="424"
height="148"
srcset="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/n7vEwFV_hu59727809d2bf1b5d9ba7a18a34a00d36_6939_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/n7vEwFV_hu59727809d2bf1b5d9ba7a18a34a00d36_6939_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="286"
data-flex-basis="687px"
>
&lt;/picture>
&lt;/p>
&lt;p>この時、dir1とdir2のタイムスタンプは00:21になっています。&lt;br>
&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/H6Jpcxv_hu87ad565addf3f2289796f69466948843_6311_535x48_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/H6Jpcxv.png"
width="535"
height="48"
srcset="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/H6Jpcxv_hu87ad565addf3f2289796f69466948843_6311_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/H6Jpcxv_hu87ad565addf3f2289796f69466948843_6311_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="1114"
data-flex-basis="2675px"
>
&lt;/picture>
&lt;/p>
&lt;p>では、この後の00:25に、dir1にaというディレクトリと、dir1/a/test.txtを作成したとします。&lt;br>
&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/p86roJv_hu82dd600bcfd9b8f73c27b4ad048c8146_8492_416x197_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/p86roJv.png"
width="416"
height="197"
srcset="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/p86roJv_hu82dd600bcfd9b8f73c27b4ad048c8146_8492_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/p86roJv_hu82dd600bcfd9b8f73c27b4ad048c8146_8492_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="211"
data-flex-basis="506px"
>
&lt;/picture>
&lt;/p>
&lt;p>そうすると、dir1のタイムスタンプが00:25に変わります。&lt;br>
&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/M08AEZJ_hu723be59a5f488717592169fc57ebebb7_6313_545x48_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/M08AEZJ.png"
width="545"
height="48"
srcset="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/M08AEZJ_hu723be59a5f488717592169fc57ebebb7_6313_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/M08AEZJ_hu723be59a5f488717592169fc57ebebb7_6313_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="1135"
data-flex-basis="2725px"
>
&lt;/picture>
&lt;/p>
&lt;p>これは純粋に、ディレクトリの中が書き換わったのでタイムスタンプも変わったということになります。&lt;/p>
&lt;h3 id="googledriveの場合">GoogleDriveの場合
&lt;/h3>&lt;p>同様の操作を行ってみます。まず、GoogleDrive内にdir1とdir2を作成しました。&lt;br>
タイムスタンプは00:27になっています。&lt;br>
&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/KkKohdI_hu5cb7316361a8008878b89b44e99bafc3_22643_705x172_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/KkKohdI.png"
width="705"
height="172"
srcset="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/KkKohdI_hu5cb7316361a8008878b89b44e99bafc3_22643_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/KkKohdI_hu5cb7316361a8008878b89b44e99bafc3_22643_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="409"
data-flex-basis="983px"
>
&lt;/picture>
&lt;/p>
&lt;p>そして00:30にdir1/aとdir1/a/test.txtを作成します。&lt;br>
&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/OY90r4D_hua62067d284977656fde4eec0bec80a8c_2140_339x21_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/OY90r4D.png"
width="339"
height="21"
srcset="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/OY90r4D_hua62067d284977656fde4eec0bec80a8c_2140_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/OY90r4D_hua62067d284977656fde4eec0bec80a8c_2140_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="1614"
data-flex-basis="3874px"
>
&lt;/picture>
&lt;/p>
&lt;p>&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/An3Pqzk_hu9961e8c6316b0460e8beb4bbdcafa8ff_9998_544x192_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/An3Pqzk.png"
width="544"
height="192"
srcset="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/An3Pqzk_hu9961e8c6316b0460e8beb4bbdcafa8ff_9998_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/An3Pqzk_hu9961e8c6316b0460e8beb4bbdcafa8ff_9998_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="283"
data-flex-basis="680px"
>
&lt;/picture>
&lt;/p>
&lt;p>この場合、通常のLinuxのファイルシステムであれば、先程記載したようにdir1のタイムスタンプが00:30になっているはずです。&lt;br>
ところが、ls -laをしてみると、00:27のままになっています(念の為dir1の中もls -la)&lt;/p>
&lt;p>&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/sk2qYEL_hu20002128c584de609e41b3ca02217a2e_46433_632x384_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/sk2qYEL.png"
width="632"
height="384"
srcset="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/sk2qYEL_hu20002128c584de609e41b3ca02217a2e_46433_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/sk2qYEL_hu20002128c584de609e41b3ca02217a2e_46433_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="164"
data-flex-basis="395px"
>
&lt;/picture>
&lt;/p>
&lt;p>つまり、GoogleDriveのタイムスタンプのシステムは、「&lt;strong>追加・更新されたものに対してだけタイムスタンプが変更され、そのファイル/ディレクトリがある親ディレクトリのタイムスタンプは更新されない&lt;/strong>」ということになります。&lt;/p>
&lt;p>これがSubsonicにとっては非常に厄介な問題です。&lt;/p>
&lt;p>&lt;a class="link" href="https://sourceforge.net/p/subsonic/bugs/222/" target="_blank" rel="noopener"
>https://sourceforge.net/p/subsonic/bugs/222/&lt;/a> でも指摘されていますが、どうやらSubsonicはタイムスタンプをベースにファイルスキャンを行っているようなのです。&lt;br>
タイムスタンプベースでのファイルスキャンをしてしまうと、タイムスタンプが変更されてないディレクトリに対しては、「以前と同じ」とみなし、新規ファイルを探しに行かなくなってしまいます。&lt;/p>
&lt;p>上記の例で言えば、&lt;/p>
&lt;ol>
&lt;li>初回スキャンの時にはdir1というディレクトリは存在するものの、中にaというディレクトリはない&lt;/li>
&lt;li>この状態でaというディレクトリとtest.txtを作成&lt;/li>
&lt;li>2回目のスキャンを行う&lt;/li>
&lt;li>dir1はタイムスタンプがかわっていない&lt;/li>
&lt;li>削除されてないか確認するため、一応各ディレクトリの中に前回スキャンしたときと同じデータがあるかを見に行く(このとき新規ファイルは見てない)&lt;/li>
&lt;/ol>
&lt;p>という現象が発生します。(5番の動作に関しては、ソースは読んでないので挙動からの推測です。)&lt;/p>
&lt;p>このSubsonicのスキャンシステムだと、GoogleDriveに新しくデータを置いたときも一切反映されないため、曲を追加するたびにフォルダ設定をやり直して初回スキャンをかける必要が出てしまいます。&lt;/p>
&lt;p>さすがにそれは非現実的なので、どうにか回避しなければなりませんが、Subsonic側のソースを触るのはあまりにも面倒です。(本家SubsonicはOSSじゃないですし)&lt;/p>
&lt;p>そしてGoogleDriveの仕組みはユーザーがどうにかできる問題でもありません。&lt;/p>
&lt;p>さてどうするか、となると、ユーザーには唯一の手段が残されています。タイムスタンプの更新です。&lt;/p>
&lt;p>幸い、google-drive-ocamlfuseは、touchコマンドでタイムスタンプだけの更新が行えます。&lt;br>
上記例の場合、aというディレクトリを追加した親ディレクトリ(本来勝手にタイムスタンプが更新されるディレクトリ)であるdir1のタイムスタンプを、touchで更新してあげれば良くなります。
&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/1WfyGhJ_huecf0b197fe018ec3b624b2235ab90325_32256_629x265_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/1WfyGhJ.png"
width="629"
height="265"
srcset="https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/1WfyGhJ_huecf0b197fe018ec3b624b2235ab90325_32256_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2021/20210306-subsonic-with-googledrive/img/1WfyGhJ_huecf0b197fe018ec3b624b2235ab90325_32256_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="237"
data-flex-basis="569px"
>
&lt;/picture>
&lt;/p>
&lt;h3 id="シェルスクリプトを書く">シェルスクリプトを書く
&lt;/h3>&lt;p>シェルスクリプトといっても大層なものではありませんが、&lt;/p>
&lt;ul>
&lt;li>音楽フォルダ内のディレクトリ一覧を書き出し&lt;/li>
&lt;li>新規追加があった場合はその親ディレクトリのタイムスタンプをtouchで更新する&lt;/li>
&lt;/ul>
&lt;p>というシェルスクリプトを書いて、これをcronでSubsonicの自動スキャンの前に叩いてあげるようにすれば改善します。&lt;/p>
&lt;h4 id="完成形">完成形
&lt;/h4>&lt;p>とりあえず完成形です。&lt;br>
(txtを書き出すフォルダは適宜変えてください。)&lt;br>
(また、findする先のフォルダも適宜読み替えてください)&lt;/p>
&lt;p>&lt;strong>注意: このシェルスクリプトをcronに登録する前に、findしてる行(リストのtxt書き出し)を一度単独で実行してください。そうしないと後述するdiff処理時にすべて新規追加扱いになり、シェルスクリプト実行時に音楽フォルダ内の別に更新しなくても良いはずの対象ディレクトリがすべてtouchされます。&lt;/strong>&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 前回の更新差分をoldにする&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mv /subsonicdir/musicdir_new.txt /subsonicdir/musicdir_old.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># findかける (初回準備として必要&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">find /mnt/gsuitedrive/Musics -type d &lt;span class="p">|&lt;/span> sort &amp;gt; /subsonicdir/musicdir_new.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># touchする&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># もし差分がなかったらtouchにオペランドが無いっていうエラーが出るだけなのでヨシッ!&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">diff /subsonicdir/musicdir_old.txt /subsonicdir/musicdir_new.txt &lt;span class="p">|&lt;/span> grep &lt;span class="s2">&amp;#34;&amp;gt;&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> sed -e &lt;span class="s1">&amp;#39;s/&amp;gt; //g&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> sed -e &lt;span class="s1">&amp;#39;s/\/[^\/]*$//g&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> sort &lt;span class="p">|&lt;/span> uniq &lt;span class="p">|&lt;/span> sed -e &lt;span class="s1">&amp;#39;s/ /\\ /g&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> xargs touch&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4 id="何をしているのか">何をしているのか
&lt;/h4>&lt;p>このシェルスクリプトでは、&lt;/p>
&lt;ol>
&lt;li>前回のディレクトリ一覧をoldにリネーム&lt;/li>
&lt;li>新しくリストを作成(new)&lt;/li>
&lt;li>oldとnewでdiffする&lt;/li>
&lt;li>diffした結果新規追加されたものを抽出&lt;/li>
&lt;li>余計な文字を消してパスだけの文字列に&lt;/li>
&lt;li>新規追加されたディレクトリの親ディレクトリのパスに変更&lt;/li>
&lt;li>念の為sort&lt;/li>
&lt;li>重複を削除&lt;/li>
&lt;li>touchに渡すために半角スペースにエスケープ&lt;/li>
&lt;/ol>
&lt;p>という処理をしています。&lt;/p>
&lt;h5 id="mv今回はリネーム">mv(今回はリネーム)
&lt;/h5>&lt;p>これは単純にリネームです。古いoldはこれで上書きされます。&lt;/p>
&lt;h5 id="find音楽フォルダ内のディレクトリ一覧を書き出し">find(音楽フォルダ内のディレクトリ一覧を書き出し)
&lt;/h5>&lt;p>これは単純にfindでディレクトリ一覧を出しています。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">find /mnt/gdrive/Musics -type d &lt;span class="p">|&lt;/span> sort &amp;gt; ~/musicdir_new.txt&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>なぜsortしてるかというと、findはやるたびに順番がぐちゃぐちゃになることがあるからです。統一させないと毎回関係ないフォルダをどこかしら更新することになります。&lt;/p>
&lt;h5 id="diff--sed--e-s-g">diff ～ sed -e &amp;rsquo;s/&amp;gt; //g'
&lt;/h5>&lt;p>まずdiffでoldとnewの差分を取ります。&lt;br>
そして &lt;code>grep &amp;quot;&amp;gt;&amp;quot;&lt;/code> で新規追加行だけを抽出します。&lt;br>
その結果から &lt;code>&amp;gt; &lt;/code> を取り除いて、パスだけにします(これをしないと &lt;code>&amp;gt; /mnt/gdrive/....&lt;/code> みたいになったままなので)&lt;/p>
&lt;h5 id="sed--e-sg">sed -e &amp;rsquo;s//[^/]*$//g'
&lt;/h5>&lt;p>詳細は &lt;a class="link" href="http://erax.blog.fc2.com/blog-entry-69.html" target="_blank" rel="noopener"
>http://erax.blog.fc2.com/blog-entry-69.html&lt;/a> で。&lt;br>
追加ディレクトリそのものではなくその上のディレクトリに対してtouchするため、最後の &lt;code>/&lt;/code> 以降を削除します。&lt;/p>
&lt;p>(例: /hoge/fuga/neko → /hoge/fuga)&lt;/p>
&lt;h5 id="sort--uniq">sort | uniq
&lt;/h5>&lt;p>sortは後述のuniqのために改めて念の為のためにやっています。&lt;/p>
&lt;p>uniqは(オプションを使わない場合)重複行を取り除いて出力してくれるコマンドです。&lt;/p>
&lt;p>たとえば、ディレクトリ内が&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">/hoge/fuga/neko
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/hoge/fuga/inu&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>となっていたとき、これを先程のsedで処理すると&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">/hoge/fuga
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/hoge/fuga&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>のように、 &lt;code>/hoge/fuga&lt;/code> が2回出てきてしまいます。これをuniqに通すことで、一回だけに変えられます。&lt;/p>
&lt;h5 id="sed--e-s--g">sed -e &amp;rsquo;s/ /\ /g'
&lt;/h5>&lt;p>これは半角スペースをエスケープしています。なぜ必要かというと、&lt;br>
たとえば &lt;code>/hoge/foo bar/neko&lt;/code> というディレクトリがあったとして、ここまでの処理(uniqまで)を通すと、 &lt;code>/hoge/foo bar&lt;/code> になります。&lt;br>
これをこの後のtouchに渡すと、コマンドが&lt;code>touch /hoge/foo bar&lt;/code> となってしまい、 &lt;code>/hoge/foo&lt;/code> と &lt;code>bar&lt;/code> がそれぞれtouchされます。これでは &lt;code>foo bar&lt;/code> というディレクトリにはtouchされません。これを対策するために半角スペースにエスケープをさせています。( &lt;code>touch /hoge/foo\ bar&lt;/code> にする)&lt;/p>
&lt;h5 id="xargs-touch">xargs touch
&lt;/h5>&lt;p>最後に、diffから色々処理を加えて出来上がった「touchする必要のあるディレクトリ一覧」に対してtouchをしてあげます。xargsを使うことで一括で行なえますね。&lt;/p>
&lt;p>以上で新規追加されたディレクトリの親ディレクトリのタイムスタンプを更新できます。そしてSubsonicに見つけてもらえるようになります。&lt;/p>
&lt;h2 id="〆">〆
&lt;/h2>&lt;p>Subsonicのスキャンシステム、どうにかならないかなぁ・・・。&lt;/p></description></item><item><title>X230のOSをLinuxからWindowsに戻した。</title><link>https://blog.mikuta0407.net/posts/2020/20200326-x230-back-to-windows-from-linux/</link><pubDate>Thu, 26 Mar 2020 22:45:10 +0900</pubDate><guid>https://blog.mikuta0407.net/posts/2020/20200326-x230-back-to-windows-from-linux/</guid><description>&lt;h2 id="lubuntu1804からwindows10-proにした">Lubuntu18.04からWindows10 Proにした
&lt;/h2>&lt;p>大学3年が始まろうとしている春休み(一ヶ月伸びたけど)、X230のOSを入れ替えました。&lt;br>
今までは&lt;/p>
&lt;ul>
&lt;li>256GB 2.5ｲﾝﾁSSD: Windows7(めったに使わない)&lt;/li>
&lt;li>256GB mSATA SSD: Lubuntu18.04(基本こっち)&lt;/li>
&lt;/ul>
&lt;p>という構成で運用していましたが、この度、&lt;/p>
&lt;ul>
&lt;li>500GB 2.5ｲﾝﾁSSD: Windows10 Pro(基本こっち)&lt;/li>
&lt;li>256GB mSATA SSD: Lubuntu18.04(めったに使わない)&lt;/li>
&lt;/ul>
&lt;p>という構成に切り替えました。SSDを500GBのものに換装し、Win7の入っていたSSDは大切に保管することに。&lt;/p>
&lt;p>タイトルと違うじぇねぇかと言いたいかもしれませんが、メインOSが変わったのでそういうことにしておいてください。&lt;/p>
&lt;h2 id="なぜ変えたのか">なぜ変えたのか
&lt;/h2>&lt;p>単純に言えば&lt;strong>使い勝手がやっぱり悪い&lt;/strong>からです。&lt;/p>
&lt;p>って言うとLinuxユーザーからぶっ飛ばされそうなので、順を追って説明します。&lt;/p>
&lt;h3 id="まず釈明">まず釈明
&lt;/h3>&lt;p>以下の内容は、「18年くらいWindowsで生活してきた人間が抱いた不満」と、「使い方がマッチしてない」という感じです。使い方次第ではこんな不満出てきませんしね。&lt;br>
もちろんLinuxは今でもVPSで使っていますし、WSL経由でのUbuntuも使わない日はないほどです。&lt;br>
あくまでも「デスクトップ運用をバリバリする」ことをやめたという感じです。&lt;br>
&lt;del>macOSよりは遥かに良いですからね、デスクトップ環境のLinux&lt;/del>&lt;/p>
&lt;h3 id="最初はwin10嫌いから">最初は&amp;quot;Win10嫌い&amp;quot;から
&lt;/h3>&lt;p>Windows7おじさんだったので、Windows10のデザインに納得行かず、じゃあLinux行こうかとなったのがスタートです。&lt;br>
厳密に言うと、それのちょっと前にWindowsじゃ限界があるネットブックでLinux運用していたので、その流れからという感じです。(詳しくは&lt;a class="link" href="https://blog.mikuta0407.net/posts/2019/20191210-recommendations-for-thin-client/" target="_blank" rel="noopener"
>個人シンクライアント運用のすゝめ&lt;/a>に。)&lt;br>
ちなみにデスクトップ機はメモリ的な余裕だけでなく、ゲーム等もあるため、LinuxではなくギリギリまでWindows7運用をした後、Windows10に移行しています。(&lt;a class="link" href="https://blog.mikuta0407.net/posts/2019/20190905-windows7-with-ryzen3thgen-and-rtx2000-series/" target="_blank" rel="noopener"
>RyzenとRTX2060でWin7&lt;/a>動かしてた)&lt;/p>
&lt;h3 id="部分的に引っかかるところがでてくる">部分的に引っかかるところがでてくる
&lt;/h3>&lt;p>もともと今までたまにUbuntuを使ったり、VPSでもLinuxを使っていることもあって、Linuxに抵抗感がなかったこともあり、「Windowsよりメモリ消費量も少ないし最高じゃん」という感じで、半年ほどX230で利用していました。その間、大学でAndroidアプリ開発の演習授業(バカみたいな短い納期でプレゼンタイマーアプリ作った)もX230でこなしていました。&lt;/p>
&lt;p>ただ、大学の備え付けのモニタにVGA出力をしてデュアルモニターにして作業をしようとしたとき、明らかに挙動が怪しいんです。もちろん一度接続完了すれば問題ないのですが、長い間WindowsをメインOSとして使ってきた人間なので、思うようにパッと設定ができないことに少し不満を持ち始めました。(Xfceだともっとひどかった)&lt;/p>
&lt;p>また、授業課題内で結局MSOfficeを使わざるを得ない時があり、Wineじゃどうしてもインライン入力がうまく行かなかったりするので、仮想でWindowsXPを動かしたり、Windows7を起動することもありました。&lt;/p>
&lt;h3 id="トラックポイントの設定がやっぱりなんともいえない">トラックポイントの設定がやっぱりなんともいえない。
&lt;/h3>&lt;p>小学校のころに、WindowsMe搭載のThinkPadを使わせてもらったり、その後X121eを手に入れたりと、ほぼほぼ使ってきたノートパソコンがThinkPadの人間なので、トラックポイントは大事です。&lt;br>
ただ、どうしてもトラックポイントはWindows利用時と若干感覚が変わります。特にデフォルト設定だと軽すぎるんです。GUI設定で変更できる最遅にしても軽いのです。(巷では重いという人が多い様でびっくりしますが)&lt;br>
その結果xinputのプロパティをなんとか自分の好みに近づけたものをxinputrcに書いたりして凌いでいたのですが、これまたサスペンド等から復帰したりするとその設定が無効化されるのでまた実行する必要があったりしました。&lt;br>
Windowsじゃ絶対に発生しない不満なので、半年経って、やはり・・・という感じになったというのがあります。&lt;/p>
&lt;h3 id="文字入力が感覚と違う">文字入力が感覚と違う
&lt;/h3>&lt;p>トラックポイントと同じく感覚の問題になっているのですが、やはり慣れといのはなかなか変えることが出来ませんし、文字入力は感覚でやってるところがあるので、自分の想定と違う挙動をされると困惑します。&lt;br>
それが如実でした。&lt;/p>
&lt;p>個人的にmozcを使いたいので、選択肢としてはfcitx-mozcが一般的な方法かと思います。&lt;br>
ただ、fcitx-mozcは、「文字変換中に半角/全角を押したら確定してからIME切り替え」というのが効きません。キー設定で擬似的にやっても、変換中に押したら確定するところまで出来てもIMEオフまでは出来ないのです。(もう一回押せばオフになる)&lt;br>
ibus-mozcだと一応できるのですが、ibusの挙動もなんともいえないところがあり、結果的にfcitxでもibusでも、授業のノート取りをしていてもところどころでストレスが溜まってしまっていました。&lt;/p>
&lt;p>WindowsのMS-IME/Google日本語入力の挙動に指が最適化しちゃってるので、それを変えろと言われても難しいんですよね・・・&lt;/p>
&lt;h3 id="結局wineに頼ってる">結局Wineに頼ってる
&lt;/h3>&lt;p>もちろんChromeやDiscordといったソフトはLinuxネイティブがあるので問題なく利用できているのですが、MIDIシーケンサのDomino等、ゲームボーイエミュレータのbgbなど、結局Wineで動かしてることが多かったのです。もちろんそれでも良いと思うこともあったのですが、ソフトウェア音源周りで不満が出ることもあり(サウンドフォントではびみょいこともあり、S-YXG50をsavihost経由で使いたかったが、音のプチプチノイズがすごい)、「リモートじゃなくてネイティブで動かすんだったらLinuxじゃなくてWindowsで動かせば良いのでは・・・?」と考えるようになりました。&lt;/p>
&lt;h3 id="samba鯖の読み込みが遅い">Samba鯖の読み込みが遅い
&lt;/h3>&lt;p>おま環の可能性が非常に高いのですが、PCManFM内蔵の機能だけでなくmount.cifsでNAS等のマウントをしても、PCManFMでのディレクトリ一覧の表示に非常に時間がかかり、若干実用に耐えられませんでした。転送速度は普通なのですが、ディレクトリ一覧が出ないことには作業が難しいですしね・・・&lt;br>
理由はよくわかりません。&lt;/p>
&lt;h3 id="pulsesecureが未だにubuntu1804までしか使えない">PulseSecureが未だにUbuntu18.04までしか使えない
&lt;/h3>&lt;p>これは完全に大学で使うツールの問題なのですが、大学NWに接続できるVPNのツールであるPulseSecureが、PulseSecure公式リリースですら未だにUbuntu18.10移行をサポートしておらず、もうすぐ20.04LTSが出ようかというのにも関わらず、なんで・・・?という状態です。&lt;br>
新しいOSがいいというわけではないですが、どうせなら最新LTSにしたい人間にとっては問題です。(もちろん手動で依存パッケージ入れれば動くらしいですが、非公式手段ですからね)&lt;/p>
&lt;h3 id="今のlinux向けdeに使いたいものがない">今のLinux向けDEに使いたいものがない
&lt;/h3>&lt;p>Lubuntu18.04はLXDEですが、18.10以降はLXQtになっています。どうやら20.04にもLXDEのパッケージは提供されるようですが、すでに開発は停滞しているということもあり、将来性が微妙です。&lt;br>
そして後継のLXQtはLXDEには標準でできる「Win(Superキー)+十字キーでのウィンドウ整理」が未だに満足に出来ません。19.04まで出来たのに19.10からはできなくなったという報告もあります(実際にX121eで試しましたが確かに無理です)。lxappearanceを手動で入れないと満足にテーマ変更も出来ないですし、正直LXDEからの乗り換え先としてまだ早いんじゃないかと思うレベルで未熟な気がしています。&lt;br>
そしてXfceは前述のように、起動中でのモニタ接続に難がありますし、MATEもGnomeもCinnamonもKDEも「それ使うならメモリ消費量のメリットがなぁ・・・」という感じです。&lt;/p>
&lt;p>使いたい(常用したい)と思えるDEがないんだったら、デザインだけが難点になってるWindowsのほうが良いじゃん・・・となってしまいました。&lt;/p>
&lt;h3 id="wslがwin10にある">WSLがWin10にある
&lt;/h3>&lt;p>個人的に、デスクトップ運用に関しては、どう頑張ってもWindowsに勝るものはないと思っています。もちろん重さ等ありますが、それでも腐ってもWindowsという感じです。&lt;br>
LinuxのメリットはやはりCLIだと思っています。cmd.exeじゃ遠回りしないと出来ないことでも、Linuxならパッと出来たりします。&lt;/p>
&lt;p>そこで登場しちゃったのがWSLです。GUIに強いWinで、CUIに強いLinuxがメモリ消費量をあまり気にせずに簡単にほぼネイティブ状態で使えちゃうなら、もうそれでいいじゃんって感じですよホント。&lt;/p>
&lt;h2 id="ということでwindowsに戻った">ということでWindowsに戻った
&lt;/h2>&lt;p>以上の理由により(ほかにも若干あるけど書くほどでもない)、X230でのメインOSをWindowsに戻しました。&lt;/p>
&lt;p>トラックポイントも文字入力も&amp;quot;いつもの&amp;quot;感覚で行え、いつも使ってるソフトが工夫せずに動く。そしてWSLでUbuntuのCUIも使える。
Win7おじさんからすれば安定性やUI等、まだまだ不満があるとはいえ、腐ってもWindowsなんだなと実感させられています。&lt;/p>
&lt;p>本当に使い方次第だとは思いますが、結局世の中はWindowsで動いてると感じる部分もありますし、Win10+WSLというのが結局最強なのかなぁと思っています。&lt;/p>
&lt;p>あっ残してあるLubuntuはまだ役割はありますよ。iPhoneSEとiPhone6sPlusのcheckra1nがありますからね。あとWSL2があるとはいえLinuxネイティブ環境というのも大事ですし。&lt;/p>
&lt;p>ちなみにある程度同じ理由で、MacBook2017もBootCampでWindows10入れました。まぁmacOSの場合はWineが実質使えなくなったり、Catalina自体がひどかったりとあるのでもうちょっと考えずに突っ込みましたけど。&lt;/p>
&lt;h2 id="〆">〆
&lt;/h2>&lt;p>何だこの記事。&lt;/p></description></item><item><title>ブラウザ経由でシェルスクリプト叩いてWake on LANする</title><link>https://blog.mikuta0407.net/posts/2020/20200213-wakeonlan-from-browser/</link><pubDate>Thu, 13 Feb 2020 16:48:10 +0900</pubDate><guid>https://blog.mikuta0407.net/posts/2020/20200213-wakeonlan-from-browser/</guid><description>&lt;p>(この記事はQiitaからのコピーです。 本記事の投稿日はQiitaでの投稿日としています。)&lt;/p>
&lt;p>WiFiルーターを買い替えたら、発売日的に6年後のモデルなのに、以前の機種にあった&amp;quot;PCリモート起動&amp;quot;(ルーターのWebツールでWoLのマジックパケットを飛ばせる機能)が消え失せました。(WR8750N→WG1200HS3)&lt;/p>
&lt;p>ブラウザでWoL飛ばせるのがすごい便利だったのですが、無くなったものは仕方ない。自分でどうにかせねばということで、可能な限り手間を掛けずに今までと同じような機能を作ってみます。&lt;/p>
&lt;h2 id="必要なもの">必要なもの
&lt;/h2>&lt;ul>
&lt;li>家のLANとインターネットに繋がっているRaspberry Pi的なやつ(お好きなものをどうぞ)&lt;/li>
&lt;/ul>
&lt;h2 id="どんな感じにするかを考える">どんな感じにするかを考える
&lt;/h2>&lt;p>&amp;ldquo;PCリモート起動&amp;quot;とはどういう画面だったかを思い出すと……&lt;/p>
&lt;p>こんな感じでした(実機をしまってしまったので、 &lt;a class="link" href="https://michisugara.jp/archives/2015/home_ip.html" target="_blank" rel="noopener"
>https://michisugara.jp/archives/2015/home_ip.html&lt;/a> からお借りしました。)&lt;br>
&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2020/20200213-wakeonlan-from-browser/img/a45114d2-40b7-e03f-7ed3-8af46238a317_hu6be33e9ea5c07560ff2b4da92d7e6148_9830_198x150_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2020/20200213-wakeonlan-from-browser/img/a45114d2-40b7-e03f-7ed3-8af46238a317.png"
width="198"
height="150"
srcset="https://blog.mikuta0407.net/posts/2020/20200213-wakeonlan-from-browser/img/a45114d2-40b7-e03f-7ed3-8af46238a317_hu6be33e9ea5c07560ff2b4da92d7e6148_9830_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2020/20200213-wakeonlan-from-browser/img/a45114d2-40b7-e03f-7ed3-8af46238a317_hu6be33e9ea5c07560ff2b4da92d7e6148_9830_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="132"
data-flex-basis="316px"
>
&lt;/picture>
&lt;br>
題名と端末選択と起動ボタンですね。&lt;br>
自宅LANで使うだけの無くなった機能を復活させたいだけなので、プルダウンメニューは再現せずに行きます。&lt;/p>
&lt;h2 id="方針">方針
&lt;/h2>&lt;ul>
&lt;li>ラズパイ側はこれだけのためにphpとかPerlとか入れるの面倒なので、シェルスクリプトをCGIとして起動してマジックパケットを飛ばす&lt;/li>
&lt;li>JavaScriptは使わない&lt;/li>
&lt;li>HTML5なんて知らん&lt;/li>
&lt;/ul>
&lt;h2 id="やることを3行でいうと">やることを3行でいうと・・・
&lt;/h2>&lt;ul>
&lt;li>Apache入れてCGIとしてシェルスクリプト実行できるようにする&lt;/li>
&lt;li>HTML書く&lt;/li>
&lt;li>シェルスクリプト書く&lt;/li>
&lt;/ul>
&lt;h2 id="raspberry-piにapacheとetherwakewol飛ばせるソフトを入れる">Raspberry Piにapacheとetherwake(WoL飛ばせるソフト)を入れる
&lt;/h2>&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ sudo apt install apache2 etherwake&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h2 id="apacheの設定">Apacheの設定
&lt;/h2>&lt;p>apacheに.shファイルもCGIとして動かしてねってお願いします。&lt;/p>
&lt;p>/etc/apache2/sites-available/wol.conf というファイルで以下の内容を作成します(ファイル名はわかりやすければ良い)&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ScriptAlias&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">cgi&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">bin&lt;/span>&lt;span class="o">/&lt;/span> &lt;span class="s2">&amp;#34;/var/www/cgi-bin/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="ne">Directory&lt;/span> &lt;span class="s2">&amp;#34;/var/www/cgi-bin&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">AllowOverride&lt;/span> &lt;span class="n">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Require&lt;/span> &lt;span class="n">all&lt;/span> &lt;span class="n">granted&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Options&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="n">ExecCGI&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">MultiViews&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="n">SymLinksIfOwnerMatch&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Order&lt;/span> &lt;span class="n">allow&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">deny&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Allow&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="n">all&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="ne">Directory&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">AddHandler&lt;/span> &lt;span class="n">cgi&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="n">sh&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>保存したら今書いた設定を有効化します&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">$&lt;/span> &lt;span class="n">sudo&lt;/span> &lt;span class="n">a2ensite&lt;/span> &lt;span class="n">wol&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">conf&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">$&lt;/span> &lt;span class="n">sudo&lt;/span> &lt;span class="n">service&lt;/span> &lt;span class="n">apache2&lt;/span> &lt;span class="n">reload&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>apacheがcgiを実行できるようにします&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ sudo a2enmod cgid&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>apacheを再起動します&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ sudo service apache2 restart&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h2 id="htmlを書く">HTMLを書く
&lt;/h2>&lt;p>こんなのを書きました。最低限ですね。&lt;br>
/var/www/cgi-bin/に、wol.shというファイルを作成する前提です。&lt;/p>
&lt;div>&lt;div class="codeblock--name">/var/www/html/index.html&lt;/div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Wake On Lan&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Wake On Lan&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">button&lt;/span> &lt;span class="na">onclick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;location.href=&amp;#39;http://192.168.0.100/cgi-bin/wol.sh&amp;#39;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>母艦機を起動&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- 二台以上ある場合は、指定するシェルスクリプトの名前を適宜個別に変更して必要数作って羅列しましょう。--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>こんな感じになります&lt;br>
&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2020/20200213-wakeonlan-from-browser/img/1a1eb851-f351-6bb5-c782-acc4b1ad0709_huef61ed0f3dd2ebc1e51e8aeb5abced21_7146_408x164_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2020/20200213-wakeonlan-from-browser/img/1a1eb851-f351-6bb5-c782-acc4b1ad0709.png"
width="408"
height="164"
srcset="https://blog.mikuta0407.net/posts/2020/20200213-wakeonlan-from-browser/img/1a1eb851-f351-6bb5-c782-acc4b1ad0709_huef61ed0f3dd2ebc1e51e8aeb5abced21_7146_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2020/20200213-wakeonlan-from-browser/img/1a1eb851-f351-6bb5-c782-acc4b1ad0709_huef61ed0f3dd2ebc1e51e8aeb5abced21_7146_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="248"
data-flex-basis="597px"
>
&lt;/picture>
&lt;/p>
&lt;h2 id="シェルスクリプトを書く">シェルスクリプトを書く
&lt;/h2>&lt;p>/var/www/cgi-binに、wol.shという名前で書きました。&lt;/p>
&lt;div>&lt;div class="codeblock--name">/var/www/cgi-bin/wol.sh&lt;/div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/sh -xv
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Content-Type: text/html; charset=UTF-8&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wakeonlan 0a:1b:2c:3d:4e:5f &amp;gt; /dev/null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> マジックパケットを飛ばしました&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>-xvというオプションは、実行した文をそのまま出力するオプションらしいです。書いておいたらapacheのログにコマンド等が残りました。なくてもいいかな?&lt;/p>
&lt;p>&lt;code>echo &amp;quot;Content-Type: text/html; charset=UTF-8&amp;quot;&lt;/code>はHTMLヘッダです。これがないと結果の画面を表示してくれないので、HTMLヘッダをechoで吐き出してもらいます。&lt;/p>
&lt;p>&lt;code>wakeonlan 0a:1b:2c:3d:4e:5f &amp;gt; /dev/null&lt;/code>は、WoLのマジックパケットを飛ばしてくれる部分です。MACアドレスは適宜変更してくださいね。 ただ、どうもIPアドレス指定がなかったりすると、CGIとして実行時にエラーを吐き、Internal Server Errorが出ちゃうので、エラーメッセージを/dev/nullに投げてもみ消します。(動けばいいんです。)&lt;/p>
&lt;p>最後はブラウザに文字を表示するための部分です。表示さえしてもらえればいいので特にタグとかつけませんでした。&lt;/p>
&lt;p>次にシェルスクリプトを実行できるようにします。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ sudo chmod +x wol.sh&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h2 id="試す">試す
&lt;/h2>&lt;p>&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2020/20200213-wakeonlan-from-browser/img/3b3a4b0d-9d86-e79f-b6b4-c01b0f63271a_hu105844c49fd91e5c59ea5125fd0d8519_6291_529x97_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2020/20200213-wakeonlan-from-browser/img/3b3a4b0d-9d86-e79f-b6b4-c01b0f63271a.png"
width="529"
height="97"
srcset="https://blog.mikuta0407.net/posts/2020/20200213-wakeonlan-from-browser/img/3b3a4b0d-9d86-e79f-b6b4-c01b0f63271a_hu105844c49fd91e5c59ea5125fd0d8519_6291_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2020/20200213-wakeonlan-from-browser/img/3b3a4b0d-9d86-e79f-b6b4-c01b0f63271a_hu105844c49fd91e5c59ea5125fd0d8519_6291_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="545"
data-flex-basis="1308px"
>
&lt;/picture>
&lt;/p>
&lt;p>これで対象のマシンが起動してきたら成功です。&lt;/p>
&lt;h2 id="〆">〆
&lt;/h2>&lt;p>元の機能よりだいぶ簡略化されましたけど、これで目的が果たされたので満足です。&lt;br>
ただ元のやつと違って、w3mでボタンが押せなくなったのでHTMLの編集が必要そうです・・・(inputタグでやればいいのか?)&lt;/p>
&lt;p>Apache経由でシェルスクリプトの実行という部分を応用すれば、色々といろんなことが出来そうな気がします。&lt;/p>
&lt;h2 id="参考にしたサイト">参考にしたサイト
&lt;/h2>&lt;ul>
&lt;li>CGI用のシェルスクリプトの書き方
&lt;ul>
&lt;li>「UEC - usp engineers&amp;rsquo; community - UECジャーナル」&lt;/li>
&lt;li>&lt;a class="link" href="https://uec.usp-lab.com/JOURNAL/CGI/JOURNAL.CGI?POMPA=KAIGAN_journal19" target="_blank" rel="noopener"
>https://uec.usp-lab.com/JOURNAL/CGI/JOURNAL.CGI?POMPA=KAIGAN_journal19&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>etherwakeについて
&lt;ul>
&lt;li>「Raspberry Piで自宅内のWindows機を起動させる (Wake-on-LAN) - たねやつの木」&lt;/li>
&lt;li>&lt;a class="link" href="https://www.taneyats.com/entry/raspi-wake-on-lan#Raspberry-Pi%E3%81%AE%E8%A8%AD%E5%AE%9A" target="_blank" rel="noopener"
>https://www.taneyats.com/entry/raspi-wake-on-lan#Raspberry-Pi%E3%81%AE%E8%A8%AD%E5%AE%9A&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>confファイルの書き方
&lt;ul>
&lt;li>「ubuntu16.04のApache2設定/cgi設定 - Qiita」&lt;/li>
&lt;li>&lt;a class="link" href="https://qiita.com/kummn/items/f6bd0f3e643595ed077a" target="_blank" rel="noopener"
>https://qiita.com/kummn/items/f6bd0f3e643595ed077a&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>ブートローダはNTLDR/WindowsBootManagerのままLinuxをインストールする</title><link>https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/</link><pubDate>Tue, 09 Apr 2019 16:54:00 +0900</pubDate><guid>https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/</guid><description>&lt;p>(この記事はQiitaからのコピーです。 本記事の投稿日はQiitaでの投稿日としています。)&lt;/p>
&lt;p>Atom N450のWindowsXPの入っているネットブックに、最近流行りのSereneLinuxをインストールしようと思ったのですが、SereneLinuxに限らず、Linux全般においてブートローダをNTLDR/WindowsBootManagerからGrubに変えてしまうと、機種によってはWindowsで休止状態ができなくなってしまうことがあるので、それを防いだり、簡単にLinux側を吹き飛ばせるように、NTLDR/WindowsBootManager経由で起動できるようにします。&lt;/p>
&lt;p>これを簡単にやるにはWubiが便利なのですが、SereneLinuxなどといったWubiが扱えないディストリを入れる際にはGrub4DOSを使えば解決できるので、今回はそれをやってみます。&lt;/p>
&lt;p>試した環境&lt;/p>
&lt;ul>
&lt;li>機種 : MSI U130
&lt;ul>
&lt;li>今入っているOS : WindowsXP&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>機種 : デスクトップ機(Sandy世代)
&lt;ul>
&lt;li>今入っているOS : Windows7(LegacyBoot)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="osのインストーラを作る">OSのインストーラを作る
&lt;/h2>&lt;p>CDやDVDに焼いたり、LiveUSBを作ったりで、各自お好きな方法で作ってください。私はUnetbootinでつくりました。&lt;/p>
&lt;h2 id="liveディスクで起動する">Liveディスクで起動する
&lt;/h2>&lt;p>今回はUnetbootinで試したので、起動時に「Default」を選んで通常のLiveモードで起動させました。&lt;/p>
&lt;h2 id="インストーラを起動する">インストーラを起動する
&lt;/h2>&lt;p>SereneLinuxの場合はデスクトップにある「Install SereneLinux_ほげほげ」を起動です。&lt;br>
ちなみにこの段階でWiFiなどでネットワークにつないでおくと、インストール時にアップデートやその他ドライバとかが自動でインストールされて便利ですね。&lt;/p>
&lt;p>その後、言語やキーボード、アップデート周りの項目を進めていきます&lt;/p>
&lt;h2 id="パーティションを構成する">パーティションを構成する
&lt;/h2>&lt;p>どのようにインストールするかを聞かれた際、一番下の「&lt;strong>それ以外&lt;/strong>」を選択します。&lt;/p>
&lt;p>&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/771dfc23-471d-2ecf-a218-d5fe1ea4b542_hu1af6071b57f02bbdda17191b8a4fc65e_655426_912x684_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/771dfc23-471d-2ecf-a218-d5fe1ea4b542.png"
width="912"
height="684"
srcset="https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/771dfc23-471d-2ecf-a218-d5fe1ea4b542_hu1af6071b57f02bbdda17191b8a4fc65e_655426_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/771dfc23-471d-2ecf-a218-d5fe1ea4b542_hu1af6071b57f02bbdda17191b8a4fc65e_655426_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
>
&lt;/picture>
&lt;/p>
&lt;p>パーティションの分割については人それぞれあると思うので、ここで詳しくは触れませんが、今回はこのようにしました。&lt;br>
先頭のWindowsXPのパーティションは基本パーティション、後ろは全て一つの論理(拡張)パーティションです。&lt;br>
メモリが2GBあるので、Swapに4GBとりました。「/」には52GBもあれば大丈夫でしょう。&lt;/p>
&lt;p>&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/981e2f88-5754-368a-bb98-36ec317ab50e_hu2a15bd438b835ae08a2ac96701d8976f_672609_912x684_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/981e2f88-5754-368a-bb98-36ec317ab50e.png"
width="912"
height="684"
srcset="https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/981e2f88-5754-368a-bb98-36ec317ab50e_hu2a15bd438b835ae08a2ac96701d8976f_672609_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/981e2f88-5754-368a-bb98-36ec317ab50e_hu2a15bd438b835ae08a2ac96701d8976f_672609_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
>
&lt;/picture>
&lt;/p>
&lt;p>そして大事なのが一番下の項目の「ブートローダをインストールするデバイス」です。&lt;br>
これを/dev/sdaにしてしまうと、ブートローダがNTLDRやWindowsBootManagerからGrubに書き変わってしまいます。&lt;br>
今回の場合はLinuxをインストールする領域が/dev/sda5なので、プルダウンメニューから「/dev/sda5」に切り替えます。&lt;/p>
&lt;p>&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/973c9c19-f3f6-1cec-db56-e81104d22541_huf202bd317f6338664486a48587cede11_957157_912x684_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/973c9c19-f3f6-1cec-db56-e81104d22541.png"
width="912"
height="684"
srcset="https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/973c9c19-f3f6-1cec-db56-e81104d22541_huf202bd317f6338664486a48587cede11_957157_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/973c9c19-f3f6-1cec-db56-e81104d22541_huf202bd317f6338664486a48587cede11_957157_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
>
&lt;/picture>
&lt;/p>
&lt;p>その後は画面に従ってタイムゾーンやユーザー名を設定し、ファイルコピーを開始させます。&lt;/p>
&lt;h2 id="windowsvista以降の場合">WindowsVista以降の場合
&lt;/h2>&lt;p>~&lt;del>WindowsVista以降(NT6.x以降)の場合は、EasyBCDが利用できるので、この先の作業は適用できません。&lt;br>
再起動後、WindowsにEasyBCDをインストールし、ブートメニューに/dev/sda5(今回の場合)にインストールしたGrub2を追加してください。&lt;br>
参考URL→http://www7b.biglobe.ne.jp/&lt;del>shinou/ubuntu/ubuntu001.html&lt;/del>&lt;/del>&lt;/p>
&lt;p>2019/04/16追記&lt;br>
Windows7でやってみましたが､EasyBCD付属のGrub4DOSの使い勝手がよくわからず､起動できなかったので､下にWindowsBootManagerでの手順も追加しました。&lt;/p>
&lt;h2 id="grub4dosを導入する">Grub4DOSを導入する
&lt;/h2>&lt;p>画面の指示に従って再起動します。&lt;br>
おそらく今インストールしたLinuxではなく、Windowsが立ち上がってくるはずです。&lt;br>
(場合によってはチェックディスクが走ることがあります。時間はかかりますが、走らせておくとよいでしょう。EaseUS Partition Masterとかで事前にWindows側でパーティションを切っておけばチェックディスクは走らないかもしれません。)&lt;/p>
&lt;h3 id="grub4dosのダウンロードと配置">Grub4DOSのダウンロードと配置
&lt;/h3>&lt;p>&lt;a class="link" href="https://sourceforge.net/projects/grub4dos/files/GRUB4DOS/" target="_blank" rel="noopener"
>https://sourceforge.net/projects/grub4dos/files/GRUB4DOS/&lt;/a>&lt;/p>
&lt;p>ここからGrub4DOSをダウンロードしてきます(20190409現在のファイル: grub4dos-0.4.4.zip)&lt;/p>
&lt;p>展開したあと､&lt;br>
WindowsXP以前の場合は「grldr」(拡張子なし)をCドライブ直下にコピーします。&lt;br>
WindowsVista以降の場合は｢grldr.mbr｣をコピーします。&lt;/p>
&lt;h3 id="ブートエントリの追加">ブートエントリの追加
&lt;/h3>&lt;h4 id="ntldrの場合-bootiniの編集">NTLDRの場合: boot.iniの編集
&lt;/h4>&lt;p>C:\boot.iniを編集します。&lt;br>
この後の作業で改行がLFだけのファイル作成が必要になるので、この段階からnotepad++やgPad、TeraPadといったLF改行コード対応のエディタを使いましょう。&lt;br>
隠しファイルが表示される設定になっていない場合は、設定変更で見れるようにしておいてください。&lt;/p>
&lt;p>boot.iniの最終行に、&lt;/p>
&lt;div>&lt;div class="codeblock--name">boot.ini&lt;/div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="na">C:\grldr&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;SereneLinux&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>と追記します。(念のためですが、boot.iniはCRLFです）&lt;br>
「SereneLinux」の部分は、NTLDRに表示される名前ですので、好きにどうぞ。&lt;/p>
&lt;h3 id="windowsbootmanagerの場合-bcdエントリの追加">WindowsBootManagerの場合: BCDエントリの追加
&lt;/h3>&lt;p>(下記の参考リンクのUbuntu Wiki見たほうがわかりやすいかも)&lt;br>
コマンドプロンプトにて､&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cmd" data-lang="cmd">&lt;span class="line">&lt;span class="cl">bcdedit /create /d &lt;span class="s2">&amp;#34;SereneLinux&amp;#34;&lt;/span> /application BOOTSECTOR&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>「SereneLinux」の部分は、WBMに表示される名前ですので、好きにどうぞ。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cmd" data-lang="cmd">&lt;span class="line">&lt;span class="cl">エントリ {~~~~~} は正常に作成されました。&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>とでるので､{~~~~~}をコピーします。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cmd" data-lang="cmd">&lt;span class="line">&lt;span class="cl">bcdedit /set {~~~~~} device partition=C:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bcdedit /set {~~~~~} path \grldr.mbr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bcdedit /displayorder {~~~~~} /addlast&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>でGrub4DOSをWindowsBootManagerに追加できます。&lt;/p>
&lt;h3 id="menulstの作成">menu.lstの作成
&lt;/h3>&lt;p>C:\に、Grubに「ここにLinuxがありますよー」と教えてあげるための”menu.lst”を作成します。&lt;br>
このファイルは改行コードがLFである必要があります。&lt;br>
ファイルの新規作成で行ってください。&lt;/p>
&lt;div>&lt;div class="codeblock--name">menu.lst&lt;/div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">title&lt;/span> &lt;span class="n">SereneLinux&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">root&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">hd0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">chainloader&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>例によってtitleのあとの文字列は名前なので自由です。&lt;/p>
&lt;p>ここで注意してほしいのが、「(hd0,4)」です。&lt;br>
この0と4はそれぞれドライブの番号とパーティションの番号を示しています。&lt;br>
で、この番号に関してはいろいろ規則などがあるのですが、調べてもそれがうまく動かなかったので、次の章で説明します。&lt;br>
とりあえずmenu.lstを作った状態で、再起動してみましょう。&lt;/p>
&lt;h3 id="grub4dosを起動する">Grub4DOSを起動する
&lt;/h3>&lt;p>再起動すると、ブートメニューに「SereneLinux(さっきboot.ini/cmdで打った名前）」が出てくるはずです。&lt;br>
それを選択し、Enterで起動させると、Grubが表示されます。&lt;br>
&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/91f46c42-a3e6-164c-d0af-86119361f142_hu9c55ae3826f273995aa273029ea18bf9_529244_912x684_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/91f46c42-a3e6-164c-d0af-86119361f142.png"
width="912"
height="684"
srcset="https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/91f46c42-a3e6-164c-d0af-86119361f142_hu9c55ae3826f273995aa273029ea18bf9_529244_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/91f46c42-a3e6-164c-d0af-86119361f142_hu9c55ae3826f273995aa273029ea18bf9_529244_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
>
&lt;/picture>
&lt;br>
ここでEnterで起動させたとき、うまくいけば起動するのですが、おそらく起動しない場合がほとんどのはず？です。&lt;br>
本来は5-3の段階で正しく記載していればいいのですが、私の場合ダメでした(以下の方法で調べた結果がhd0,4です)&lt;/p>
&lt;ol>
&lt;li>grubメニューが出ている段階で「c」を押す(コマンドラインの起動)&lt;/li>
&lt;li>「root (」まで打ってTabキー&lt;br>
&lt;strong>注意&lt;/strong> JISキーボードの場合&amp;quot;(&amp;ldquo;はShift+8ですが、GrubではUSキーボード判定なので、Shift+&lt;strong>9&lt;/strong>です。&lt;br>
これで候補におそらく「hd0 rd」といった表示が出てくるはずです。(読み込んでいるドライブの番号を確認。ドライブが一個しかなければ0のはず)&lt;br>
&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/f84b4560-9088-241c-3c09-fca182cdda7d_hu01bc57345a57931e7504b8e5f328a104_580200_912x684_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/f84b4560-9088-241c-3c09-fca182cdda7d.png"
width="912"
height="684"
srcset="https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/f84b4560-9088-241c-3c09-fca182cdda7d_hu01bc57345a57931e7504b8e5f328a104_580200_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/f84b4560-9088-241c-3c09-fca182cdda7d_hu01bc57345a57931e7504b8e5f328a104_580200_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
>
&lt;/picture>
&lt;/li>
&lt;li>「root (hd0,」まで打ってTabキー&lt;br>
&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/a37a5d49-1204-7ed6-27e4-a29dd7a361f1_hua31c00f4f335a09d2b5713dbd91e6598_644508_912x684_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/a37a5d49-1204-7ed6-27e4-a29dd7a361f1.png"
width="912"
height="684"
srcset="https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/a37a5d49-1204-7ed6-27e4-a29dd7a361f1_hua31c00f4f335a09d2b5713dbd91e6598_644508_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/a37a5d49-1204-7ed6-27e4-a29dd7a361f1_hua31c00f4f335a09d2b5713dbd91e6598_644508_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
>
&lt;/picture>
&lt;/li>
&lt;li>ext2fsと表示されている番号を確認
↑この写真の場合はFilesystem type is ext2fsと表示されているのが”Partition num: 4”なので、4番ということになります。
もし4であれば、変更の必要はないのでEscを押し、9.に飛んでください。&lt;/li>
&lt;li>Escでメニューに戻る&lt;/li>
&lt;li>root (hd0,4)にカーソルを合わせ、「e」を押す&lt;/li>
&lt;li>hd0,4の4を消し、4.で調べた番号にする&lt;/li>
&lt;li>Enterでメニューに戻る&lt;/li>
&lt;li>「b」を押す&lt;/li>
&lt;/ol>
&lt;p>これで/dev/sda5に入ったGrubが起動するはずです。(ちょっとややこしいですね)&lt;br>
その後、一番上の項目をEnterで起動すれば、無事にインストールしたLinuxが起動します。&lt;br>
&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/77d80afe-ef89-d096-9476-4456cb70c568_hubfce73eafdc8761223c11f14b2ee861e_664595_912x684_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/77d80afe-ef89-d096-9476-4456cb70c568.png"
width="912"
height="684"
srcset="https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/77d80afe-ef89-d096-9476-4456cb70c568_hubfce73eafdc8761223c11f14b2ee861e_664595_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/77d80afe-ef89-d096-9476-4456cb70c568_hubfce73eafdc8761223c11f14b2ee861e_664595_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
>
&lt;/picture>
&lt;/p>
&lt;h3 id="menulstを編集する">menu.lstを編集する
&lt;/h3>&lt;p>前項で番号を編集した場合、その編集はmenu.lstに書き込まれてはいないので、menu.lstを編集する必要があります。&lt;br>
これはLinuxやWindowsどちらからでもできますので、変えておきましょう。&lt;br>
( &lt;code>root (hd0,4)&lt;/code>の&lt;strong>4&lt;/strong>のところ )&lt;/p>
&lt;p>&lt;strong>2019/12/25追記&lt;/strong>
ちなみに無理やり強引でな方法ではありますが､Grub4DosとGrub2のタイムアウト時間を無くすことで､一発でLinuxをNTLDR/WindowsBootManagerから起動させることができます。&lt;br>
もし環境構築が終わって問題なさそうならやってみてもいいかもしれません。&lt;br>
ですが､Grub4Dosはいいとして､Grub2になんらかの変更が必要になった場合は､一度ライブ起動でLinuxを立ち上げ､Grub2の設定ファイルを書き換えるなど､若干面倒な作業が必要になることも頭に入れておいてください。&lt;/p>
&lt;h2 id="インストールしたlinuxで遊ぶ">インストールしたLinuxで遊ぶ
&lt;/h2>&lt;p>お疲れ様でした。&lt;br>
これでWubiを使わないでも、Windowsのブート周りに大きな改変を加えないでLinuxを起動させることができます。&lt;br>
今回はUbuntu系ディストリ(SereneLinux)でしたが、Grub2を使うLinuxディストリであればほとんど使うことができるはずです。&lt;br>
良いLinuxライフをお過ごしください。&lt;br>
&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/891d078d-31a4-cf14-8b44-8e570bb72f46_hu1501e6713b9c22b19b4b1d0a749a7b42_934108_912x684_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/891d078d-31a4-cf14-8b44-8e570bb72f46.png"
width="912"
height="684"
srcset="https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/891d078d-31a4-cf14-8b44-8e570bb72f46_hu1501e6713b9c22b19b4b1d0a749a7b42_934108_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2019/20190409-linux-installation-with-ntldr-wbm/img/891d078d-31a4-cf14-8b44-8e570bb72f46_hu1501e6713b9c22b19b4b1d0a749a7b42_934108_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
>
&lt;/picture>
&lt;/p>
&lt;h2 id="参考にしたurl">参考にしたURL
&lt;/h2>&lt;ul>
&lt;li>大まかな流れ(Windows10のWBMを使ってUbuntu16.10?をインストールしている。今回の場合のWBM版)
&lt;ul>
&lt;li>&lt;a class="link" href="https://ameblo.jp/yoshihirow/entry-12211040971.html" target="_blank" rel="noopener"
>Windows10 に Ubuntu16を足す | ろっひー&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Ubuntu Japanese Team WikiのGrub4DOSに関するページ
&lt;ul>
&lt;li>&lt;a class="link" href="https://wiki.ubuntulinux.jp/UbuntuTips/UsbInstall/BootUbuntuInUsbWithBiosWithoutSupportForUsb/Grub4dos" target="_blank" rel="noopener"
>grub4dos を利用するための準備&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Grub4DOSの使い方
&lt;ul>
&lt;li>&lt;a class="link" href="http://www10.plala.or.jp/palm84/grub4dos.html" target="_blank" rel="noopener"
>GRUB for DOS めも&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Ubuntu 18.04.2でxrdp(のXorgモード)が使えないので一時的に凌ぐ</title><link>https://blog.mikuta0407.net/posts/2019/20190318-xrdp-with-ubuntu1804-workaround/</link><pubDate>Mon, 18 Mar 2019 16:56:00 +0900</pubDate><guid>https://blog.mikuta0407.net/posts/2019/20190318-xrdp-with-ubuntu1804-workaround/</guid><description>&lt;p>(この記事はQiitaからのコピーです。 本記事の投稿日はQiitaでの投稿日としています。)&lt;/p>
&lt;p>おそらくすでにたくさんある情報のn番煎じなんですが､Ubuntu18.04.2に関する情報がかなり少なかったので､同じような人がいたとき用に書いておきます。&lt;br>
(ちなみに試した環境はXubuntuですが､コマンド的にどのフレーバーでも動きそうな気がします)&lt;/p>
&lt;h2 id="xrdpがubuntu18042で使えないらしい">xrdpがUbuntu18.04.2で使えないらしい
&lt;/h2>&lt;p>&lt;a class="link" href="https://note.spage.jp/archives/576" target="_blank" rel="noopener"
>https://note.spage.jp/archives/576&lt;/a>&lt;br>
&lt;a class="link" href="https://ubuntuforums.org/showthread.php?t=2413157" target="_blank" rel="noopener"
>https://ubuntuforums.org/showthread.php?t=2413157&lt;/a>&lt;br>
ここの情報のおかげでわかったのですが､どうも18.04.2ではxrdpのXorgモードを使う際に必要なxorgxrdpが対応していない?らしく､(少なくとも簡単には)動かないようです。&lt;/p>
&lt;p>無理に弄って壊しても嫌ですし､いつか対応することを前提に､xorg経由ではなく、X11VNC経由でXRDPを使うことで凌ぎます。&lt;/p>
&lt;h2 id="1-x11vncをインストールする">1. x11vncをインストールする
&lt;/h2>&lt;p>本来であればsudo apt install xrdpと少しの操作で使えるようになるはずのxrdpがXorgモードで使えないということなので､できるだけ手間を省いていきます。
(xrdpは入ってる前提)&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install x11vnc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">x11vnc -storepasswd &lt;span class="c1">#パスワードを設定します&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo nano /etc/xrdp/xrdp.ini&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h2 id="2-xrdpの設定を変える">2. xrdpの設定を変える
&lt;/h2>&lt;p>xrdpの設定ファイルで､Xvncに関する設定を少し変更します&lt;/p>
&lt;div>&lt;div class="codeblock--name">/etc/xrdp/xrdp.ini&lt;/div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Xvnc]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">Xvnc&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">lib&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">libvnc.so&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">username&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">ask&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">password&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">ask&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">ip&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">localhost &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ↑ここを一応127.0.0.1からlocalhostに変えておく&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">5900 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ↑-1を5900に&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>これで設定は終わりです。&lt;/p>
&lt;h2 id="3-x11vncを起動してrdpクライアント経由でつなぐ">3. X11VNCを起動して、RDPクライアント経由でつなぐ
&lt;/h2>&lt;p>あとは&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">x11vnc -localhost -forever -bg -display :0&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>を叩いておけば､&lt;/p>
&lt;ul>
&lt;li>localhostのみに(-localhost)､&lt;/li>
&lt;li>ずっと(-forever)､&lt;/li>
&lt;li>バックグラウンドで(-bg)&lt;/li>
&lt;/ul>
&lt;p>開くVNCサーバーが立ち上がります。&lt;/p>
&lt;p>あとは、先程の設定のおかげでXRDPがVNC経由でつないでくれますので、お好きなRDPクライアントで接続しましょう。&lt;/p>
&lt;p>VPSみたいに生VNCが危なくて使えないときには､xrdpを経由することでちょっと安全な認証が使えますので､そういうときにいいですね。&lt;br>
xorgxrdpがちゃんと対応しない間はこれで凌ごうと思います。&lt;/p>
&lt;p>(2020/02/03編集: XRDPの代わりにVNCで繋げばいいじゃんみたいな表現に見えた気がするのですこし修正しました)&lt;/p></description></item><item><title>Apache2のhttpsと､Softetherの443番通信を両立したい</title><link>https://blog.mikuta0407.net/posts/2018/20181022-use443-apache2-and-sevpn/</link><pubDate>Mon, 22 Oct 2018 16:57:05 +0900</pubDate><guid>https://blog.mikuta0407.net/posts/2018/20181022-use443-apache2-and-sevpn/</guid><description>&lt;p>(この記事はQiitaからのコピーです。 本記事の投稿日はQiitaでの投稿日としています。)&lt;/p>
&lt;p>Apache2でのWebサーバーをLet&amp;rsquo;s EncryptでSSL化したところ､SoftEther VPN Serverで443番を使った通信が､当然ながら通らなくなってしまいました。&lt;/p>
&lt;p>SoftEther自体は443を使わなくても通信ができるのですが､とあるクライアント側のネットワークが443以外使えないということもあり､なんとか443を使ったVPNと､HTTPSを両立させようと､必死になって調べてみましたが､大半が｢OpenVPNとSSLHつかって分離!｣とかそういう感じで､一切Apache2+SoftEtherの両立に関する情報がありませんでした。&lt;/p>
&lt;p>いろいろと調べたり､友人に相談したりした結果､うまく行ったので､やり方を書いておきます。&lt;/p>
&lt;h2 id="環境">環境
&lt;/h2>&lt;p>Debian 9 Stretch
Apacheバージョン:2.4.25
SoftEtherVPNインストール済み&lt;/p>
&lt;h2 id="1-softether-vpn-serverで443のlistenを止める">1. SoftEther VPN Serverで443のListenを止める
&lt;/h2>&lt;p>&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2018/20181022-use443-apache2-and-sevpn/img/48263f8a-add4-5d68-7fde-9ec12019f9bc_hu000b559a9ba106b75b642ea6e1bcd726_8698_315x187_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2018/20181022-use443-apache2-and-sevpn/img/48263f8a-add4-5d68-7fde-9ec12019f9bc.png"
width="315"
height="187"
srcset="https://blog.mikuta0407.net/posts/2018/20181022-use443-apache2-and-sevpn/img/48263f8a-add4-5d68-7fde-9ec12019f9bc_hu000b559a9ba106b75b642ea6e1bcd726_8698_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2018/20181022-use443-apache2-and-sevpn/img/48263f8a-add4-5d68-7fde-9ec12019f9bc_hu000b559a9ba106b75b642ea6e1bcd726_8698_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="リスナーポート一覧"
class="gallery-image"
data-flex-grow="168"
data-flex-basis="404px"
>
&lt;/picture>
&lt;/p>
&lt;p>443はApacheに明け渡してしまい､SoftEtherからは443を止めてしまいましょう&lt;/p>
&lt;h2 id="2-apacheにproxyのmodを読ませる">2. ApacheにproxyのMODを読ませる
&lt;/h2>&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">sudo /usr/sbin/a2enmod proxy&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h2 id="3-apacheにバーチャルホストの設定をする">3. Apacheにバーチャルホストの設定をする
&lt;/h2>&lt;p>/etc/apache2/sites-available/ に､適当に名前をつけてconfファイルを置きます。
ここではvpn.confとします。&lt;/p>
&lt;div>&lt;div class="codeblock--name">vpn.conf&lt;/div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;VirtualHost *:443&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ServerName vpn.example.com # 適当にサブドメインかなんかでやっちゃいましょう
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ProxyPreserveHost On
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ProxyPass / vpn.example.com:5555 timeout=3600 # 5555番に転送
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/VirtualHost&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>これで設定は完了です。&lt;/p>
&lt;div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo systemctl restart apache2&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>で再起動&lt;/p>
&lt;h2 id="4-確認">4. 確認
&lt;/h2>&lt;p>&lt;picture>
&lt;source srcset="https://blog.mikuta0407.net/posts/2018/20181022-use443-apache2-and-sevpn/img/6a94b33e-9ab4-e5be-1881-41fda945dd8b_hu28114c9c70e0c2d95704e0f7802c0608_31861_703x271_resize_q75_h2_box_3.webp" type="image/webp">&lt;img src="https://blog.mikuta0407.net/posts/2018/20181022-use443-apache2-and-sevpn/img/6a94b33e-9ab4-e5be-1881-41fda945dd8b.png"
width="703"
height="271"
srcset="https://blog.mikuta0407.net/posts/2018/20181022-use443-apache2-and-sevpn/img/6a94b33e-9ab4-e5be-1881-41fda945dd8b_hu28114c9c70e0c2d95704e0f7802c0608_31861_480x0_resize_box_3.png 480w, https://blog.mikuta0407.net/posts/2018/20181022-use443-apache2-and-sevpn/img/6a94b33e-9ab4-e5be-1881-41fda945dd8b_hu28114c9c70e0c2d95704e0f7802c0608_31861_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="接続ポート情報"
class="gallery-image"
data-flex-grow="259"
data-flex-basis="622px"
>
&lt;/picture>
&lt;/p>
&lt;p>実際に繋いでみると､サーバー側では443を止めていても､クライアントからは443でつながっていることがわかります。&lt;/p>
&lt;p>実際セキュリティがどうなのかはわかりませんが､Apache2でのHTTPS接続と､443番を使わざるを得ない状況でのSoftEtherVPN Serverの両立ができました。&lt;/p>
&lt;p>もし同じことで悩んでいる方に役立てば嬉しいです。&lt;/p></description></item><item><title>Java AppletをIDEを使わずにコマンドラインで簡単に使いたい</title><link>https://blog.mikuta0407.net/posts/2018/20181011-javaapplet-with-cli/</link><pubDate>Thu, 11 Oct 2018 16:59:00 +0900</pubDate><guid>https://blog.mikuta0407.net/posts/2018/20181011-javaapplet-with-cli/</guid><description>&lt;p>(この記事はQiitaからのコピーです。 本記事の投稿日はQiitaでの投稿日としています。)&lt;/p>
&lt;p>ke9000氏が書いた「 &lt;a class="link" href="https://qiita.com/ke9000/items/3fa9b3645ceeff5ec223" target="_blank" rel="noopener"
>Java AppletをIDE使わずにビルドしたい&lt;/a> 」を試していたところ、一つのプロジェクトならいいが、学校の授業のように頻繁にソースコードを切り替えるときには、毎回HTMLファイルを書き換え、Classesフォルダを作り・・・っとやるのは大変なことに気づいた。&lt;br>
そこで、LinuxやMac等のOSに限るが、簡単に操作ができるようにしてみる。&lt;br>
もちろんやってることは当たり前すぎて、参考になるほどでもないが、備忘録として書いておく。&lt;br>
基本的に先述の記事を読んだことを前提に進めるが、一応適宜コードは書いていく。&lt;br>
(&lt;strong>注: Classesフォルダに毎回コピーをしているのは、授業ではNetBeansを使用しているため、srcフォルダから元ソースファイルを動かせないためである&lt;/strong>)&lt;/p>
&lt;h2 id="フォルダ構成について">フォルダ構成について
&lt;/h2>&lt;p>今回は、~/Javaというフォルダ内で作業する。
Java/の中にプロジェクトフォルダがあり、その中にソースコードがあるという前提で話をすすめる。&lt;/p>
&lt;h2 id="htmlファイルを用意する">HTMLファイルを用意する
&lt;/h2>&lt;div>&lt;div class="codeblock--name">applet.html&lt;/div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Applet Test&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">applet&lt;/span> &lt;span class="na">code&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;CLASS_NAME.class&amp;#34;&lt;/span> &lt;span class="na">width&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;150&amp;#34;&lt;/span> &lt;span class="na">height&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;150&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">applet&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>これを**~/Java/applet.html**として保存する&lt;/p>
&lt;h2 id="シェルスクリプトを書く">シェルスクリプトを書く
&lt;/h2>&lt;div>&lt;div class="codeblock--name">applet.sh&lt;/div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">javac &lt;span class="nv">$1&lt;/span>.java
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 引数として渡された名前の.javaファイルをコンパイル&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -e &lt;span class="nv">$1&lt;/span>.html &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> :
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cat &amp;lt;Javaフォルダのパス&amp;gt;/applet.html &lt;span class="p">|&lt;/span> sed &lt;span class="s2">&amp;#34;s/CLASS_NAME/&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2">/&amp;#34;&lt;/span> &amp;gt; &lt;span class="nv">$1&lt;/span>.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 先程作ったhtmlファイルをベースに、「CLASS_NAME」をそのときに使うファイルに変更したものを作る。あったら作らない。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir Classes 2&amp;gt;/dev/null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Classesフォルダがなかったら作る&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cp *.class Classes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># コンパイルでできた.classファイルをClassesにコピー/上書きコピー&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">appletviewer &lt;span class="nv">$1&lt;/span>.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Appletを起動&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>mkdirのところはifで分岐させても良かったが、エラーは単純に「すでにあるから作れないよ！」なので、表示させなければそれでいいということでこうした。&lt;br>
ちなみにapplet.htmlとapplet.shは同じディレクトリにいることを前提としている&lt;/p>
&lt;h2 id="エイリアスに登録する">エイリアスに登録する
&lt;/h2>&lt;p>今作ったシェルスクリプトを、.javaフォルダのあるところで簡単に実行できるようにbashrcに書く&lt;/p>
&lt;div>&lt;div class="codeblock--name">.bashrc&lt;/div>
&lt;div class="codeblock--content">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">applet&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;applet.shのパス&amp;gt;/applet.sh&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h2 id="使ってみる">使ってみる
&lt;/h2>&lt;p>アプレットを使用したプログラムのソースコード(hoge.java)の位置まで移動して、&lt;br>
&lt;code>applet hoge&lt;/code>(.javaはいらない)&lt;br>
で、コンパイルから指定フォルダまでの移動、起動までやってくれる&lt;/p>
&lt;p>以上。&lt;/p>
&lt;p>&lt;del>元記事でも言ってるけど、JavaAppletって非推奨なんじゃないの？&lt;/del>&lt;/p></description></item></channel></rss>